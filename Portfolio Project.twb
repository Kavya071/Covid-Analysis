<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (tableau table 1)' inline='true' name='federated.0u5xt8n1r95y1t1bpc4dw14l1bth' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 1' name='excel-direct.0taq1k11da3mcv1cihlzb1s3kx7s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rj270/Documents/tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0taq1k11da3mcv1cihlzb1s3kx7s' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='TOTAL_CASES' ordinal='0' />
            <column datatype='integer' name='TOTAL_DEATHS' ordinal='1' />
            <column datatype='real' name='DEATH_PERCENTAGE' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0taq1k11da3mcv1cihlzb1s3kx7s' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='TOTAL_CASES' ordinal='0' />
            <column datatype='integer' name='TOTAL_DEATHS' ordinal='1' />
            <column datatype='real' name='DEATH_PERCENTAGE' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_CASES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL_CASES]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TOTAL_CASES</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FFA4CE685C3C414095F93865DBB7ADEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_DEATHS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL_DEATHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TOTAL_DEATHS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FFA4CE685C3C414095F93865DBB7ADEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATH_PERCENTAGE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEATH_PERCENTAGE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DEATH_PERCENTAGE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FFA4CE685C3C414095F93865DBB7ADEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DEATH_PERCENTAGE]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TOTAL_CASES]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TOTAL_DEATHS]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FFA4CE685C3C414095F93865DBB7ADEA]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FFA4CE685C3C414095F93865DBB7ADEA'>
            <properties context=''>
              <relation connection='excel-direct.0taq1k11da3mcv1cihlzb1s3kx7s' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='TOTAL_CASES' ordinal='0' />
                  <column datatype='integer' name='TOTAL_DEATHS' ordinal='1' />
                  <column datatype='real' name='DEATH_PERCENTAGE' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 2)' inline='true' name='federated.0zzqaix1pnqc9h10e9tmp17t1qe2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.0qj5vxr1d7u7yq1bdtbqp1tu5vxn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rj270/Documents/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0qj5vxr1d7u7yq1bdtbqp1tu5vxn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0qj5vxr1d7u7yq1bdtbqp1tu5vxn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FBC7FCB802794DDABB447E54827569FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FBC7FCB802794DDABB447E54827569FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FBC7FCB802794DDABB447E54827569FB]' role='measure' type='quantitative' />
      <column caption='continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='sf_light' type='palette'>
            <map to='#26aba4'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#3296ed'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4ed4cd'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#77b9f2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#c398f5'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FBC7FCB802794DDABB447E54827569FB'>
            <properties context=''>
              <relation connection='excel-direct.0qj5vxr1d7u7yq1bdtbqp1tu5vxn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.0oc6omb1i7inxl1gffm931oavvq5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.0rs3w2n0rxeedx1bk75eh0ddq8x5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rj270/Documents/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0rs3w2n0rxeedx1bk75eh0ddq8x5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A2:D221:no:A2:D221:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0rs3w2n0rxeedx1bk75eh0ddq8x5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A2:D221:no:A2:D221:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A2:D221:no:A2:D221:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C84E8861244B452594B22A5658807839]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C84E8861244B452594B22A5658807839]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C84E8861244B452594B22A5658807839]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C84E8861244B452594B22A5658807839]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C84E8861244B452594B22A5658807839]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C84E8861244B452594B22A5658807839'>
            <properties context=''>
              <relation connection='excel-direct.0rs3w2n0rxeedx1bk75eh0ddq8x5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A2:D221:no:A2:D221:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 4)' inline='true' name='federated.143qy1s0hu7slm103q1hl06ivlg2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.0s6pxzw1f8hnqo1f4bwl91nmuy7u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rj270/Documents/tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0s6pxzw1f8hnqo1f4bwl91nmuy7u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0s6pxzw1f8hnqo1f4bwl91nmuy7u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_531B7704B03D417686B50B05C6F3D38D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_531B7704B03D417686B50B05C6F3D38D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_531B7704B03D417686B50B05C6F3D38D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_531B7704B03D417686B50B05C6F3D38D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_531B7704B03D417686B50B05C6F3D38D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_531B7704B03D417686B50B05C6F3D38D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Africa&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Africa&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Europe&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Europe&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_531B7704B03D417686B50B05C6F3D38D'>
            <properties context=''>
              <relation connection='excel-direct.0s6pxzw1f8hnqo1f4bwl91nmuy7u' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_3F07A21E7C364F8FAE351711A76AA21A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location,Forecast Indicator' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 1)' name='federated.0u5xt8n1r95y1t1bpc4dw14l1bth' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5xt8n1r95y1t1bpc4dw14l1bth'>
            <column caption='Death Percentage' datatype='real' name='[DEATH_PERCENTAGE]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TOTAL_CASES]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TOTAL_DEATHS]' role='measure' type='quantitative' />
            <column-instance column='[DEATH_PERCENTAGE]' derivation='Sum' name='[sum:DEATH_PERCENTAGE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOTAL_CASES]' derivation='Sum' name='[sum:TOTAL_CASES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOTAL_DEATHS]' derivation='Sum' name='[sum:TOTAL_DEATHS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[sum:DEATH_PERCENTAGE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[sum:TOTAL_CASES:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[sum:TOTAL_DEATHS:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[sum:TOTAL_CASES:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[sum:TOTAL_DEATHS:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[sum:DEATH_PERCENTAGE:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[:Measure Names]' value='239' />
            <format attr='height' value='142' />
            <format attr='text-format' field='[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='wrap' data-class='subtotal' value='on' />
            <format attr='text-align' data-class='subtotal' value='auto' />
            <format attr='text-align' data-class='total' value='center' />
            <format attr='color' data-class='total' value='#000000' />
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[:Measure Names]' value='48' />
            <format attr='background-color' scope='cols' value='#20a791' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='4.5644211769104004' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{ECF40EA3-4F00-44C5-A15B-72038812D854}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 2)' name='federated.0zzqaix1pnqc9h10e9tmp17t1qe2' />
          </datasources>
          <datasource-dependencies datasource='federated.0zzqaix1pnqc9h10e9tmp17t1qe2'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[none:location:nk]' value='143' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[sum:TotalDeathCount:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.0544751882553101' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{DC875DC8-E4E6-40A2-A24A-6B2A43B38760}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.0oc6omb1i7inxl1gffm931oavvq5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0oc6omb1i7inxl1gffm931oavvq5'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0oc6omb1i7inxl1gffm931oavvq5].[Longitude (generated)]' field-type='quantitative' max='20362124.252312511' min='-6314422.5014966857' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0oc6omb1i7inxl1gffm931oavvq5].[Latitude (generated)]' field-type='quantitative' max='13092918.037015818' min='-9699317.8363405801' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0oc6omb1i7inxl1gffm931oavvq5].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0oc6omb1i7inxl1gffm931oavvq5].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oc6omb1i7inxl1gffm931oavvq5].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.0oc6omb1i7inxl1gffm931oavvq5].[none:Location:nk]' />
              <geometry column='[federated.0oc6omb1i7inxl1gffm931oavvq5].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oc6omb1i7inxl1gffm931oavvq5].[Latitude (generated)]</rows>
        <cols>[federated.0oc6omb1i7inxl1gffm931oavvq5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8ED97906-37F0-4FA5-AC80-8A4DF7DBC55A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 4)' name='federated.143qy1s0hu7slm103q1hl06ivlg2' />
          </datasources>
          <datasource-dependencies datasource='federated.143qy1s0hu7slm103q1hl06ivlg2'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.143qy1s0hu7slm103q1hl06ivlg2].[tmn:date:qk]' value='317' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]' />
              <text column='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]' />
              <color column='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Forecast Indicator:nk]' />
              <text column='[federated.143qy1s0hu7slm103q1hl06ivlg2].[fVal:sum:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.143qy1s0hu7slm103q1hl06ivlg2].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.143qy1s0hu7slm103q1hl06ivlg2].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{0008E2CF-5D0E-4798-A5CF-E9699C602BDE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='6' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='49060' id='3' name='Sheet 1' w='44689' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='5' name='Sheet 2' w='44689' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='10' name='Sheet 3' w='44689' x='45172' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='12' name='Sheet 4' w='44689' x='45172' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='14' is-fixed='true' type-v2='layout-basic' w='9656' x='89861' y='940'>
              <zone h='49119' id='7' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
                <zone fixed-size='267' h='32315' id='9' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[sum:TotalDeathCount:qk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='113' h='14218' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.0oc6omb1i7inxl1gffm931oavvq5].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='33255'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='49001' id='15' param='vert' type-v2='layout-flow' w='9656' x='89861' y='50059'>
                <zone h='38073' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]&#10;[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='89861' y='50059'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='16' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='49060' id='3' is-fixed='true' name='Sheet 1' w='44689' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='10' is-fixed='true' name='Sheet 3' w='44689' x='45172' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='113' h='14218' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0oc6omb1i7inxl1gffm931oavvq5].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='33255'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='5' is-fixed='true' name='Sheet 2' w='44689' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='32315' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[sum:TotalDeathCount:qk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='12' is-fixed='true' name='Sheet 4' w='44689' x='45172' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='38073' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]&#10;[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='89861' y='50059'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D0D2D546-F042-4AFB-8E21-8E086EFFDD64}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5xt8n1r95y1t1bpc4dw14l1bth].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0F6F90E-31A2-4936-AB6B-C4A377AD07E8}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[sum:TotalDeathCount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E48079B-8D64-4D4F-83EA-4B5A3D54C31E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oc6omb1i7inxl1gffm931oavvq5].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oc6omb1i7inxl1gffm931oavvq5].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3BF2FD7-B528-429D-BADE-56D6F709201C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]&#10;[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]&#10;[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Forecast Indicator:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{1752785D-4998-4390-81FC-D85C519AE4A5}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zzqaix1pnqc9h10e9tmp17t1qe2].[sum:TotalDeathCount:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Location:nk]&#10;[federated.143qy1s0hu7slm103q1hl06ivlg2].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C1ABB1DA-69E8-4ACD-8898-AE21EDB50917}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      WjnelGDkzZAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      fy5U+H9BPJfLcUes5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5Bl133n9znnppdfv9c5d09PTgBmkAaRyIBIiFxShKhVoihZlrdsl2vL
      5dr9w1Us/7VrV3lr1/JaK5uSuJREUWIGARIkQAIcxAEGk1P3dM90zv1ev/xuOv7jdk7TAwxA
      cO1vV6f77gn33N8555eP+MWPv6Uq+SmElOyIlWiMga8UQsB0SfKTyDM8nnuRl9Ofg3gaXIdj
      1/+WXbXwwngDmcbDfN57mYgBb5c6mFEJPh05jxDcEErBL8s9DLY+dOObt4mGmXd5vGkYKdQt
      q/OD4sRIlJFyDa3hea6rLpymPb/qLn2iIEYu8QTv0RhxEQJyVcGP1H24zbs/fOXKx58cRDZ1
      L1/zfdTsKLdXTnI4NgUI9AtGJ6HKBDv1MRLVDO/nmjmldpMgz1h4B7l0I39b+BRVoxZhS5QP
      FX8XL00K5lM7kNksQ7kxDtZWyc1LTice5MnMNaRQaEJQtCEVWe5D0Q5+R03BtTnBhXKC2TqJ
      2M6M2QZGjL1Erl3m4fbMtibhRwWlfOxpn7HE40xVdOzKHIWU5FfaqU8SlCI2cI7G9j7MokAp
      xYtDbfTftRdh34ox0iC9ExboTTlVvN6T3D71Eof3ltALwXX9Ued12uquUnIlf1/9FGPdjyF0
      g/GFagRgN+5isUtCakx1PYzyXFR2Cr+2k3/KPUpfdoApqxVV18FfnT3MUWuQiZJBi1ngkFZh
      tqSYLgoaEpJLGYv7miuMl3Vmex65ZcQP4IdreLP6JAeL/0hd7Fe5CwiaU4reicuM1d2N7O75
      FfblkwdlV2hTE0gBZUfx06EY13Y88aFpQZVyICQiHFu+5vt4V94l1fdzHrm9jC6X79ffjD5M
      abqNifgenPZutt18tYzQTUQoiuq+jdOh+xBSIoCZo7/NT5wqAGenrvOSU8GLR1ApE2GFoC3C
      G7lp1B030d5NwIinmZlT1MVufO9HA4Xne0QtOFY7zHeMW8fifWgo+EgG/WYxPcjheAZdg/Oz
      Jqd2/XNUfeeHrzcUBc9ddUnlZpGahtQ0RrOQXsGR6OXaHQzHd91UG8qpEi5OYOSnyCfuQ+g6
      e679kA5nkAvhw2TMRkpaDOrbUK17lsZ81biH4x/ZeyhOjTFQjLCntXhLd5etoFSw2yw293cn
      osiaRgbSDyKT9R9LH7aFTwDxK9dh99TrtKQ8+mcFJ90d+LXtt6RrQmogtaCdUg7mxiFeC627
      yaUaSM//p1X36xt2UClQCnNmgHA1w3zrkaBiIDX4Bt2TbzOXLbKzTvLGdB1uucxD3ru0peBO
      92Xw4JvFe7ne0AF2mdbR12mrXudK7A4yLUcwZq+D66AJhR1O42sGRBJLbXzoQahrYyjXDFy9
      JfVtF56v6J8S7G7y+eKRPKdGXAZCkf+f718BpXx29H6PR+MDpCKCyZJgsP0RhJQ3LnxT7Sgw
      QtDQiTF6iQhl7rbfJWIKgm0wwIYTANdGTVzj2fx32FdT5N9PWBRaDqOcKu3jb/Fg4xypThiY
      UzjCZId7gXTYByQhHcaLOkP1d6M8l0euf51PJYYZFxYnuY/Os9/kufRFyq7PyWwdd9ZkcH04
      bXfw1u4vI3TzQz+8MExK7fcwlB2iM+V86Pq2glIKVyl0IXj1jMM5bw810X58NEbtNOjWR9r+
      rxuEkAypRgxNoBS87/dAbeu2yiqliI2fxQmnsFMdS9e83pPItt3IaCK45rkcvPg3HDYGsajS
      EFNYGsjI+jolc2Mo318o6KGUQp8b4cHx79JXjDNd1ChaaZRSCLvMubZPc2ZCx/EEP+duvOwM
      RVsSNpZn1ZveXrxEA6nBt/lUYhiAnzmHSfb+nGPyPBHTJxUSTBVB16A5rngqNUjb0GsfZmxX
      oRiuZybr3bL6toJE8dL7DhHT54nGXr7eu5+vF3+LS92/i9CNj6UPvy7QMqM87r1BKgw/H7Lo
      73xm+2yq53Lv5PM0TbwLBMKtyM2gdR8EuxxcK+ehOM/dVj+7UxU6U4qwAZttMFJMXuexy/8H
      9cNvEhl4k+YrLyI8h4daCjzbMsn353rw0y2o3CyfGfg/wfcIGYJ8VXHYPgvjV6kTOUoOnJ02
      GMnrXKq5B4A91UsIAfNVwZBfz4HQJIamkEKhaz49aZ+zhTSvZlv48UQ98fnrS5PxQ0MpTsy2
      UHI+ek2QQFCfELxX3MXZKzYH/LOEylMfm/zxawPPZe/EzznWkMfzFee13biJxm0VVUqR6n+N
      PrcR3dTRsuPgu4T630b4LqKmAZRi99Xvg+sw7Ka3Va+8OzzIA6kpnsz/GKM0x9PibSKTl5it
      Glg61KcjCCERkTiFUD3/jfMP3NXqUhsRHGkocb9xid747Ti+4FTkLv6y6X/AqetGlHLs0caA
      gAWWmsbeOkVP7XLjxSr8LPFpToePcDQxTdqwSQ2fuOlx3Qh6tUC4MEJI91jJ891qCCEQQtDZ
      ILmrbpzmnkZ6WiR5f4P99v/jUECLmAEBWVsj0/XATRT2ecz9JX/U0cfvx97gU8P/GaSG19BN
      euI0OFVa+n9Cb8fTiGQdttqYu18LuSdZQZPQGvf5F7Un6Er6NFllMk6wde/wBlG+hzAsjjf8
      JserO/EX6EmXEi2WoBiqI1+FOasREUuBEIhKjoQeWCEiuo+eGePlsSSOByAoO3B9TtF95huI
      915kfB4erx3jsfkf42cmtj8wm8BWgqgsf+h6bgSlFEIIahOSnlqbirJ4bXoHvhH+yNv+tcP8
      NClRABQzTgg/Xrf9srkZmsLVpX8jRsDeCt1Ad4rIzChN42/z28P/jo7RX/Bm0+f5QWYf6gZr
      nwRQeERMj7ARrNY71AgXVRcAzUYRUc4B4CWbOLvn9/hlsYuyoyhWBXMVA+lU+OlgjExi2dhj
      OCUSC/KfJqHGnePp9gyZskQgiRgad6ZzfPGwS1vcoyYMUih2plx2D/4E5TpLqsUPBCPEwV1h
      KjbMF32UUh+ovo2KLF5TSnGq32FkOngZ9UnJUzumaa1x4FbotP8LgnJsnh3/GrsTBRQKgQNq
      ++yunp+mNrL8Mob0bkLZYR6df56MivH47PeYqtnHrrTD7xs/pWv+NGfqn+DMdHjLSSBhsRPL
      /OqhRI5j+hUAmqMObVMnlz4Tms7r9c8yUdD45twBzvf8Fvvn3+ELu/Lsm/z5EpEpIfEWGpZC
      8Fj9BN+cPUgq4qMWvo60+sQt+PwhRVPcB6E4PwGVkWu4P/063Ze+DdUPuIrbZaKGzZvXw/z1
      iRQDY+u1QZ7nkcvnqdoOruth2zae7+O4LrbtUK3a2LaN4zg4joPneZQrFWw72NmEENzeo3Nl
      xOMnJyrkSh7g0aGNw1jfB+v3f6nQNEbsBCdHJban6AiXsDLD2yvrudxZPYEQClAUbMGV+B0c
      m36eo4kpQjoktRJfrjuJroEu4XPmmzw3+1ecmYsvcSwbdutff+XJr0p7HsGymGxoPglLIRD4
      SvGmv49yTcdyqVCMS4UkmZ5PwdwEj5Zfpi2p6BbjvG7vRUQT+FaMa5MVxgoaLXqOpnCVXaFp
      YoZaeJBlKKEwNABBWBfYjoefz/JcxwSXJ1wq9btuWpcuzBCnijsYK0ZRpSIN0TItNawSTG3H
      AQSFQgGlFOVymVK5jO/7wYRwbHzlUy5X8HyfcqUCKDSpoesBj+m4is4GSTom+cehfXTH5kiF
      XeancszW3XZTff5VQbk2FLLg2MH25rm3XHslhGQisYfxcxdoClVoSsBUQTKVPrh135TPHX3f
      4Jn4RaRYvAbnnA4a1TQdZoYJO8q7HOD6lMOuaBZDA1NTTFbDjJvt3B6d3JR8tH/5B0991XSy
      SzeoBYFxcUIIFNMljdHEfoSmoXwPlMJLtYKmE5kf4dnYeaQIyrzp7UUl6lFSo27yNG3aHMqp
      UBvxiehqXUeC9oLJBoKIKWitEexvhB9eFMTLk0y7UUQkAcbN6dSFFcGqZqk2H+DqQIFDdVki
      1nIHNE3DcR1CVohwJIxAEA6H0KTEsix0XUfXdDRdI2RZWKaJ8hWWZSIX9GpXRhW/vOAj8bmc
      fAAKc3RE8xRdg2uxI9vXBC2uCR+j4kh5Lmp6GNV/itYrP6SSzVA/dYrY1CUcK44bSt5aTZYZ
      ohpvon7uIg0RjwZvkmulOKV466btqEKW3WMv01OzzP/rEkRhjjeiD3O3OsfB0Dh3G30Yvk1c
      d7AW5N+SAyPTVQ7WljafAD1//G+/emlOUO9OEjWX2SGx+CaEolOfJnf5HNM1e1DlIv7sBDIR
      qHNs26Vn7j1qwoH3p8iMM5A+itB0iiLCo+5bhGRgX1jsmK+WF/SxnKDoaMRNBUgEAk2CJhWa
      hFzR56jsY9f8KXpjhxFmaNvjrRybhwrf54nYSaZC3UyMFdjfvMwKCSEwDQNd1xFCYBgGuhas
      7pqUC39rGIaBpkk0TWKaxhLxT825HL/gkjA9pkOdTJhdFMx6KiMDjBWjZOpu276Fc52vyEeH
      JTZ14AzxMz+kwx+hqTFGyp+lJ16gOjfDZ+LnmJrIkEvturVW2liKa4nbeH++jpPFVpxKFa++
      E1nOw0bv1gxRrHjcba626s+UNM62fIa22ZPUh2w0CQ2RZeIHQNOIGQ5J01vlALcS2v/820e/
      Ws2MIasFGuM+q1WGweqsS9iXKtE0e5ZrWYnTfRQhJUopwrMDfCZ2YeEFKkZmbK46DRBL48fr
      eNfu4uS1KoZbxXU8Yobi6oxkbF5Q9jXips935/ZhKJumkL008aQQmJpCoohZincmQtTZ42Tq
      9m/7hUTn+uhw+zg1nebJxj6SRpnaxK1zvbZMQVMN9E9rNNXAXfpZio5On36QyfZHEcaHt2rf
      ari976EuvomavE7N9TewyxX++H6fa+M2T+12SFo29XGfmaKkFG5gOtaD0LanUtwOhBAIK4yb
      bsdv6sFr7MEaOceTc99mIHoQtWaXF0LQkLnA7ebgquvvOHvJeyZPG+9uSty2L4lZENW8TXcA
      fW8sx6GmSRQrraaKlRNBKZjICy5MaViMUtQ0lOdSd/6HTHc/zKtD9dxTEwgjc9EOfM9HW+Ah
      ZdMOVLKeV+0KHZd/QGXWxXYUWmMH+UyFem+Kmaa9vDIlaDEuUx8NXOcEkAwJDrUoft4Hd6Ty
      VN1++ufGEfXt2xrsuD3FsR02bdks3+g/QM3cRbqbwLxF7K2uCeqTGk/foUhEy4Cgs3KFbwyF
      KH4CiV/ZFeL9r6PZReqjPnu6PHY1gqnD0wdczg571CYkZUcxnIFrRRDZ10laHtndj93SibAS
      dvM+Lly5wo4zX6fcuIfZUCvlVFfgaawUTfMXYY1nb9QvUG+PY22hbY5rDkVfx1ESU2yscdL+
      xz984qu6M7du+624cCZbQ3OoAsAvrpv0JY6QbTyMSNbDRD+frbyAPnye16drOR+/i9j8IPti
      81RHrzExVUQ0dgVGNMMCqfH58g94tDmDKOc5bXcgdt9NoaYLNTkIbXuZnMiwOzaPIRcmnwh2
      AlBcm4WRvIHbtAsnuj39ccmsZeziVRJhRW/sHvabA+xsUreUr5VSYJlBQEepqvjmtb2Mdz15
      y527PgyU50IxS+1bf4VVmqEz5XKkA3Y3CeJhgRA+ZVtR9QTdTTq1cUH/SIX9+jC/ke5nfGSO
      OZIoKwpS2/azKaVoHnuTcGGcUqx1U0WG8j3mk910VK7yO/F3uNM7TcPsOQa0brxQnNGJEjE/
      R0uotFTmaqWWoVAPd3GBqrcgF6ypXggwpY+2RXSgdvjzf/bVXbJ/ScIGGM9L3ix2cdy6n+lM
      hVY9S33Eo5AvM9V8F+riGzxaeY0jDWU6YlVOxu/HC8U54l+gNeHSEnE5ORPlWOE4U1YLXjgJ
      QuAOnONQqkxbjYJilsHOx9F8m1BuDLe+G9tVuJkpmsI2hra4EwhSEcFEHvr8Zty6DrxY3fa0
      QrrFbGwXl8N34cXqqR19g45Ggal9yKCLJddnsfC/T6mi+MbQYSY6P2HE71RR772IPztBl3OV
      zx+FqAV9ow5VH5pqgvvmigrDkMTDkuuTHmHf5mg7hAxFZ6xKa+4CR8rv0DB3gSGzC2VtI9jC
      rvLs9DdoKvRyueZehG4EzmsjvYh4enkhKuXwZ0eZi3Vz1HmfiAkNZpnm6ZOMjWYpHXiCYsll
      jz+AubAJ9VXrGUrdwWAhzE+L+5meq9IRymNqN2fr0Z75vT/+am2xl5mS5Eo2xHm/m1esRwgJ
      m9/kNd6tdvOLxDOcNfYzrWrwa9vQkrVcN3soT02S0oqMFE3KiTZkfobdsXnCuuDsfA2Ppwep
      yQ/Rl7oLkZvhaP4t2uIutivIln36au8FM4KNiWrowpofo79aS6gwSXvcXVKXCgRnxqC3EEPt
      e/CmBGFhWIS9MtrsIA+krtKcZFnAv0kopcgVfSxTLP1fsRWXpix+mLmTmbaHl3zRPymQ535B
      evhtrMos3SmbVFhRsX0Sw4N4yTiTeRifh7mCYlebjhAwMu2xr85dWhRNHRpiitqQR0coR8/8
      KfrcZuzo6jgHNTW4YLcRgfwjYCbvc7b50/hWDJWZ5Mi1b2H7EjvWQM3YKbSJq3y59HWa3VHi
      9ix7Q9OBRlFAOuxzZ3SU6vXLXNrxeZqn3qUxHNhgamWec8ZB0vkBfj92nFGjk4lyiB3h7A3H
      xFeB9UsK0EuxZv5v/c8C9WYoCgpael9A92cYtiR36pd5yd6N3boXWgJTsV/WUdOjRJ0sP5ru
      YnT3I4T9EvclRwEBAg5HJkhH4MSIi5gaxJwb5N7mCkIIZkrwovUkwoqiKkWEa6N8n6QsETGK
      vJQ9iDE3wN3pOYQIVKWf3g8tI6P86Jd/j3/vP0PU1CPEjVdapRShU9/lSHqCug6B2MQDfLsY
      mlYYWTB0xfv5Tq6HDlCq6UbUbn9SfixQCjl2BXdunHJNF8nSCIWyIvPuVcrSYJfMk73Wx2xD
      O7ffUYNaoZnTNag4EFuQR9dutq3RCr+V/yYvOL/BZMORJRd2kazjid7/QKNV5ju1f0i5tofJ
      HY8jyjkeHPga7d4wthJMzCj2u5d5NDWIq4GlQ8qfxRJTqzgRCLw4n2gcxzn35+xrLSxdj+s2
      sjhHnZojZipur17g5eq+Vc+xERxfUPIN4poDKLRnvvxnX53Xo0jXpmX0dfzxa8wYTdwhr3K0
      qUJH3Ka5NEBy7gqjoolQYYL4/CBOZoZHU9fpMTMMj+b4ffNl6iIeAg0QdMWrSAFvGXdR9EyO
      ZH/J7poF3yBTccHYSynRhjAsRE0D5lQ/f8p3iJYnKds+vaqDw+FpTA1AIYWgJSGQ5XnGzpwF
      u4Lf1HNDfl6W57mtchwdj3zRo6Ve/8A7AMCVTJwXtN/knLyNmca7cWP1H5lw+GGgXAd3bhLR
      c4RY76u0Gzl68iO060XqZBkhICw83FwJp6GeWDgYE4EgHZdcmYS6kLeOIBfHLmm6HPQuUxgd
      ZTK5F3QDdJPuzLt0WPNMzlWZrT+MOXaJz8x9k/sSI6TDLo1Rj6OpObpC82iSJQ2OIdbbiBYh
      BexJFlf1xVfwc3k/rpIcMQfIVTWsapbWuLvlBCj5Bpb0luRM/Vn7J1Qz16ixfGKNkCkL/vJM
      CtlqL/Fbe2qK7KHI/ZU/RwoIhQXVJoGuK4YyUDKSpCwPgVwyoC0a1O7zz/BNo53D6eKS0UuT
      imfKL/GN6uFg1wGU5+D5ihmjiaEH/juU59J7dYAj5jyLEroQ8HCPoL2mTLZynO9eiCH3H9sy
      ksyaH2Vfi4PtKNoaJB/GM3RoVvBq6ksQSX7gOj4uCMNE33EYLr1BT9qhNTNLl55n2fUlgK8E
      jusDC2GEKKSEeFRSXrELLEItGS0hbCg+V3uZ8bF3mO5+BFUtk/SyfE0+R/HAEcKTl3mu8A26
      a1bH6AoBH0YMUwpeye3E62rn4PCPAWiMulwrRhnPVWlJbv6OdfxVGiGZjkB70iceCjqWCiue
      bM9ybkJb50QUMSG0oEK0DIUmFB01imf0EwvaGoFaGGCx8LUrmudL+W/REnMAH9dXoAQzVRNW
      RH85DT38B/MrvL7jK0HHqgWklFR9sVTXInbUCqqOoqnvJ7g//yYqN7fpA0e8DOmEZEerhml8
      MGvToiPde7lOVDhx0+V/VUhmR9g59Rq7GhXGwkobvFOBXfVRCmo0h0pl9aRQSlHIOUvE/9Zo
      hJVhGmrFIiIEdDkDS58UjRS3lU9CpUBDrpeu5DLxf5idV6nAfd7zYbIoeS/xMPHZKxwJjwBg
      aPBg8/yWxA8QXmMT0Be7trgyCgG7631yVXd96eXuLP2lScFtzcujs9KnKKhP0Jn0uZIxaYt6
      vDMsaKqL8rPW31/lbyJ0cylxlFI+B8d/xuH4DBnXpOIr4pqid0rhK9jfCPd2Qm3UZyhzkUtX
      LWaOfHHDnmZSB7g8fpIj3ZWFK0Ho5o2w1nN0cFZyIfbAtlSoyrVBM9bdK/Kz+OEEaPpHHizj
      lwuIE9/hNw/l6R+qkJwbI6tcfOVj6Dq+r8jnXaSuMzOeZ2db3arFayViEZ2vTd3JUWuA25OZ
      IOnYwi1VT3AtvA+qJTAshvUOPhd6h70j/4basANC3dSeu9Uk+c7FMMKwqDbuxkrAFwo/xLzJ
      sItlV5+gHX0jliBmwdHWtYaDZR4xGKhg0qzusGLt4woErpK8bD6CPztLJT9GsetpRLptkx4q
      Oode4TfD7yGFQKLwFNi+Yq5q8DN1lE8NvU/adDjcDG8OSqa7Dm46bGZxikNtNkLpKOFxMzvA
      +30u+zs1Ls1E+IX/IDQ03LhQuYDx5j9S29nGRPuDYJcws2P4usVthdfJlaGv7RlIN2+7Hx8E
      anqEUGWGgUkHZ3SakAa6YeE4LgKBrgeLnScNrGiw1C+7v0A0blKyy0RMOFiTY3p2nB+3/le8
      lr1Oh32NQ/ZZXKHzbvg+stEWvnjtf2OWJGGvgBFVdCTsdbSwrX6vIdBFCAFfPFjmdC5KXs9y
      7/x36Yrnb6rejSaXvvjxWsTXKTWWE8os8/lrIZfuvTAp6XcbeKxuEk2CVZhkPpujbNVAbItw
      NSGYNluoOAJTk8Q0hSEVng+XZzTco7fz6ojFF/glJ0dgyotC0+ZJpyo1nZwaDXNPZxWh5LY0
      R+WKz3zR5+KQR59xlL74bahtBG8opRCXXudIeJAmZ4gfDqc5OPdzbq8vo1zoaVG4PvzF0HvM
      1vzGLcuCsa4fnoM1coYvHRNcv+6zR59HxAN2MxRabnPUi3PO2k2lnKa7lKVmxWqajEkmpwXd
      tYFw+mjtKJPDL9G3//c4r+7kvPtZEIL6mbP8aeEvqEu5oPKoFUQWLJa3LhovbMCx2hlg5qbK
      LfZhZV8WJ8RNqS/WzcoNZlTw0HCgQTGb1XhhtB43XENDxKYlWeBM7V1UYzWrO6gU8etv0+DP
      kFMRDniXsQ2BZy4bw3QJz+ys8h8nB/EPPszbr58nprvkH/rKlq67wgzxqvYEB6o/wDJ8DM3c
      cg/wfMWr1+KcSH8W7jAR0Zrtu2L7HkY8yYnUP+PO6Rd4JPxTHjxgLygHAvWwofl8uekkfz7Z
      g928f3v13iwURMrTmDq41fVaEYWi4mu8mH6K3D3PgRniu4M/4SuR5XDU6axHe3wlwQgy4TZU
      pQiaHshvSnF/9qWA+GFBA65YfGsfhPgXaWqzFftmsVkfVrBAN1OZzyJBLmp0lqsTgL/cnICH
      UiOoGvhWvoOQP8dTrVPcX/423x7JMNzywJKzmJif4rf9l2iPVik5ikwZ6iKSqhLMe5J64SNF
      kD3i7unjnOg3GTr6hzDai0jW3ZCfrtbv5vREEi8zxT37dcLWxiuvUooTlx1ORx9C1GwvWHsl
      hKbjRtNErr9LW63LgZbA7WJxAgRj4zOZB/tWOSStgXId1Jvf49OdU/gKjJnZRQXPKsz4YfK3
      fwZhhVGlHInJs/iNCrmga5QyEDiXnk0o2pwhpqabuTfzY0bNbkY6HuEt/yCH/OPrsi580JX/
      Vu4YW9W1OME25Qc2/0gtTAS15tpq/n9R2zBUtLjS+BA1ah6FT03Y4w+Nn7Hv2g+WBU1NJ+uY
      nJky+aepXfzdQCtvDgpM4ZHS3GW+UAie3VHg0bkfoOYmkPvv27YweXnYp3/aZCPGbfkpQCpF
      lQ9u1PKbdlG8+zmuFGvXbxwKMkWNn3gPopp3fuA2toIszLJf9LKrCcpVhanWpAlceP7QgipQ
      KUX77Lt84bbyEvEDtNdpjOVWP0C7GsU0JWPJg9zhnOLLY/8rj/PWR+bGrTagq1tdv77s+SnW
      fbiMZS3RVtVBkOzI82Ega/Iu+5isPYThV0nIwER+ORfj/VILXe555i5HmNzzNMTS/GPiOUQo
      FqS3QPHK+VdpmHuFnnQQQVZ1FboUgdapBd7ofQOnbVfgaLcNzDUc5V90vErI2vptmZZEJLaX
      UmMjCClRM+O40mSuolEf8QGfigOXcjU8n3gOt7vhlmuBlO+DU+Xuye/RXFtlOusxcnmWJOu9
      IH0lONH4KFYyjRg4wWcTb7L47hYt7yFL4KCh1DILdUdyltrC1/m28TkmrQ6OxC/e0mdYj8Ux
      UjfBEm2HVpehbx6JsZq9UShcJaj4GjFtMxVpMJleHdC5UnsvU3uDpEfRsbO8xH2k8z/jx5Hf
      YL59N/nxtwktWgGn+qEwjS/Bl00AuHvu42/emuHL6gw76+D8rMUbUzV8qXuSqAlydhh/fgat
      7sZZxYQQ2LU7KFWPL1k81/VcKWazLiPlGtA+JHuSbqE3+fsMFSc5PP4L0mR5O/wQ2YZ9CCvy
      kSyY6vLbhPpeZypSpr1DMHxplt2VsRVqjuB9Fn2dl2qfZrb+CNYrf82z3YMkDIVtLwjxAqSU
      eD4oT1GuuETCgfVcCUVHrMJ/730LEf8IHmINBKsX4pVqGFZdXVli8cr2JsHy8ChwlIYCTOEt
      rFAr+X0oedoqKX8jFGzBzkbBicTOpVWu2HIYKkX+eq6JcqoDKzPCTGo/Tk0LAg+gbt0AACAA
      SURBVHCTzVimibsi3Z2wwujHnuX06VFqo9McrqsyXLL5i6mjHNMuIXbuR9ZsQy25ABWv4wdX
      9/LHictoa+37C236SnAm8gBiKyfzbUDoBugGVauLd9N/tHz9Q9W6CZSCkUtol47zp/cXSYRB
      0+BU/xrrK4Jpx+IHLV9k/u4vEhs+z9FkPw0xheNIXNdFSonjOJiWied6dLfq9A673N66wPgq
      sZDU7KNPNrY5thpFteb3jbHoeU/BMyj4Oq7avIGY5hKRm6cbVAqeH6jhr2NfodqwhscNRam0
      HKBl5hRfKnwTodxABsjPoTSd2vH3iU2cR1VK0H8KrTALVoSz3b/Fvy88zZn5OJ/uyHA0Occv
      e75CWZk37YMz3ngvE1nYaIAcz+fvBg/ite67qTpvNfzifOC/fwMkcajXXKzed0i+/088s6tI
      Iiww9AVGYa3mR8E71gHmj34uSGMvHY7tM4lETEJhg0g0RChkEI5YWCELPRrDRxA2lisq+TpV
      /+Pzdl1vUwp+BvKp2OT75qAXPR3pGjhKktarKwS39bpTTcgtjx56f8zgYudn0Jp2bMrjTsd6
      +If4DuyaNtT8DHde/QYnO3+L56JvYzpvc/1aCEtXOBMm/xj/EjT2QEMHz5ePcHz6Ioc4iT7R
      h3fooe2rJxcRS/O9/oP8rn6WVCJw2luEoUnqIg6FX2E6Q1Up4Rz/LuajvxOoGrfC0EUyZ9+g
      xh7mYIvHgSYdpwqeK5BCUFGSctldiGMOeM2Z9ruWZKZ8uBHbVUQXZCJNCwhIV5KsG7CAozM+
      exbMH0qB7WsICRYfT87VjeGjVtibAiwySxsb0WBzjZB0lcRRkhrdWRCAVhdjFQ+2+v+V8Hw4
      HbkLvevglgKem2rFrgmswCKa4FzL06iaJq7k4oRNxb50mR2JCnvjeR4b+3tUacHaF46T7biH
      X+77M7xUK+GBdzZtYzMIIZhtvofhuUDgW5ksy/MVOavppuu8lRChCNqeu7aV/UIIQV19Hce6
      bLrrwHZcQFEpV6lUbPSQpOIo7GqQBKCiNGZjK0JJk/WMZNev5raSeEgmpyqkLLCVvuQTFpIe
      ZX/5/18d1tKlv4FmcvXdm0Fa0iOtV9HEoh/IVg2unHGr75wpG4y0PHBTq7LQTezmfahKEUO6
      rH2wo/Vl7hv8e+Jnf7Q0EYSQ0NxDed+ntt3OKkSSPC8/x8lrcGHYYGo+mATzRchEuz9YnbcQ
      WteBde9AKYWyK6uu+Z0HmXMUJaKcHTexwlHCEZNkTZR4IoyVjKOZJuFIYGtRgIova7fU/Ay1
      kfUaIl34zM5ViXsVLFOj6JkUfQMhICIdTPFxrv4r6Wyt4Bt8qzVSqVj1idpy0QaQYbmBpVBx
      g1m+/sO3vb2oeO0G924HgrxMLv29iJABT6UHecQ4B4A+cmHpM3/w8gdKdSiEwE2382L093ih
      9o94uT+F4/r0ZhP4nwA3ZyHEqkVEKYV7/g386dFV9+V8SVFYVByf3c2SsOUjhFrxDYmQWmBt
      At//O87+Z9TMCP7cOH4hyyuXNDKFQAFStuH9YZ2fjLTyYl+aVNgjLB0Qgdo06BwkdPtjOe9j
      0bS61hdYrfnayP/sptSglYqLXnFRvkJqAW9VrdgYhoGQYpXvyFqeayVGzc6b1m0rzwWniowm
      GNI6UGpsRYKuhS1NQa7oIKSGU9sZDEppnv1Dz3O5ZcdSPMHNQBgW1DRQBa42PsFfvvY8hWgT
      oumTl8khWIkUsmG986Bo6KTv0vvcv2uZJ54vBVn2qvOrU0oKAY+V3sY5LTnX9hgYFufrHmfs
      /Xdo6GpiKH6YSnNLELebmOFbvd/j6eZx4mGHkLyxUH6rsczPb46N3C0W3TBW1rEVdMdxsYtV
      LMvAcRxsx0U3DKpVJzCIhCIbGCHWViyI+kWmb/xcqztbLQcqR8+lu3QBEmvrDiwz7QkHVS0G
      2SiA8PgFnt2RY7T/dfL7n/xQRiVR385s7Z+BuBWeJ7cWyvfwJ4fQ9927ob+TMEOUbYVlLrMy
      l8YF6YhPXXaSitQwxHJWhJKvM0g6kDMIRnp+9524V46z5+L3iXglhutvY499mgd2BizXr/qI
      g5W0t1bI3ZjA1xt1F7FRORmJWNSkAv6RcIyaVJxoxCCeCBFPhLdphlZEq7Pok303xZbISByh
      6aSuH+fexty6nKGLmM66dFz+LlSLUMrRNfsuEVNxT+E4FOe33d5mEPLWJcu6FVC+h3Jt1Fh/
      kEFhE2c/2dhJU1Ns6XVfmjY5nvg0L/fF0VHkPWOJnc16Js/rd5K/7TcCqhYicCd59e/5XO//
      xdPlN3mweprU5AX21lZYw4mt6aCgvFD3x4WbaWqRPRJrGKiN3CqkpgmEDPjGiOGiaT66IZBa
      YFCB5ZmzVZbdz9ec5U8KX4Ps5M08FwDzNT305uObDKjicIvHH3T0s+P03/DkyNf4XHvAKrXF
      XYzeNz5cGvVPGETvO4jxfg689m94tPcvMfbcufnNVpj5zvsYn4ehrM6PYs9R6roHJ92FUpDQ
      nKXV/023k5Gn/xUi3YxyA81QbPQMNZrNydBBKt6CE5znLKV+3AqBV8D27DCL3PyHw/p3fKM9
      ezu+REuGMATrEgitmj0Ksq616SSQQlEf9Wmcv7xlp9Z1slrGr+vku/V/zFxlowFVhA2FLhWf
      b7nOseTYQqA81EXhnvLb+CNXbqrNTyKUa6MqJcpXz6NfP8Xt2iDva3upmbmELGwc8imEYKr9
      Qf7S+lP+KvHfUqzdBeNXmeu4C1fqWNJbWsn9unbwXaKnXgQ/0OTY0Voyt32aK7ufZTRaz1U3
      QTI/QtkNBngzAhMCYppDSHprRNTNsezCINatzFuXE6t+w611kttyqq9swFWBO+8GXgRLECia
      5i/R1f88jSNvoEq5rVdnpVDVEn4+i5Ns5kJmrUC7umzUXHldEQsp9tdXic31b/UYvxYQuoly
      HbTaJrz+szSFHf40/Bp/MPX/oOW3lq5EXRvCDCHPvsKevm9DOM7V2J5V9ziFHGp+hogpEGYI
      Vczyz6e+xsP9f0N9eYT9tTY9bRqtjRpRzd1QwIRlQpRiNS2sJ+ZFEl8Otl+r5t643ObXtztp
      bgY33OsWB8FRGuFtaAM+XTfAH0R/yZ/I7/MnY/+W1tHjm04CBXi9JxHVAvgeBSPN9v05gs91
      CcXrV1E3cdrIJxVCN5BtexCWxUTZQBPwujqA3Xjjg8xF7zscGv8ZDeFg1T+15znyfsCnu0ow
      Y9YjahqY3v80ALUTpwmrCvudy3yp+B2KtiCsK5oiLhNZ7wOtrhuHxy7HkGxkP1rfjthw1V9/
      x9ZfN+5fgA2ZuI2kZUt6W+ZYhGBrXEylomvQFrd5rvoC3xiEmaY7EaE1EcxK4Q1egkQdejhO
      i5ha/GDLdlZUQDIMu6NZrkwOozV1brPcJxMiFEGmm6gQ4mwmgqdgTg8hnCpbZoEFUlqZz+2p
      8KPhCExexxg+CQreDh+it+kY8+33IFcI0+WKR2W6uOTh60lJKm1QRmdeKs6OQHMS6ld4fa4l
      oFXZIdYR7WIKmkWtzHJI0MoaFksv/r3a23Pl5zfC+p1lvYpUrbkDtH/1lce/Ku3MptWu3PK2
      g7WNWrriqNZLy+wphitxZH4Gz1UoK4KQEq37IDLdyO7BH/FoanDb7Sz2TpdwoN5hsG+MbLwT
      QrFPlEZnu1BKoTKTyOnrKNcmFRY8GB/jsDHKxLzDXOPhLcv7+QzdhQucmo3Rbg9i4TKst9DX
      8Snm9z6KjKz2X64O9XJP/j3qDZu04VCr2VzLmTR3pdjdADHTZzQLsZBYOL1nYzZn+a+VhL9I
      0Ms8//J9ckXZtQS+0eod/D+Vh4E5Qb4KESNYYNfft3aHWdn+RiwaaP/6K1tPgPVFbh6aENRZ
      VY7657iHM+yZP8FJ9iMiCayh0zw18y0er7m6YZ53pQI/FseXy1mjAU8Fc1yI4NHSIk/t2EkK
      09MUo80I69fomFKloDjPzlf/LU9Vj+NF08y7BtedGnbo01Au0Nv00JYOctX5LFw/zzWamayY
      zKV2MnP4WZx0GyiFKOeoGzhOtWojJge4p3icZEOYiVmXtKxS8jXK9Q101mtICaYucDzw0IhZ
      G7MVYtXKvRltbEUzm7M/KMhXBQOzgvGCxNEM9ndZCENjZNqjPrqopw2+PV8s5KaClYS/et8R
      a9qSQUCMWNquFtv+4NL1VkaKRfbI0lly+NJDFvuNmU0POQAoeTq68GHBC9FRkpxrEJJeILAJ
      6KpVdKRtomOneTmzi0rig7plfPwQV97iQPEULfEKs7ZOVfcYbX+YrKkYv3aN28ITzJ/63zl+
      5/+06STQWnqom4nwaWOCF0uH2KsPkn3rfYZu+z1aspd4ePoFdmpTXJlqZL7oEjddqmXBdNHF
      R2MuWs/+mI/neLhK4boeaVPn4qwiKh0iEXOFXWDtyrr2oMXFaytZmYDO1Bq2aOUE8n3B9Ywg
      XwFhaKBJ9nbqmPoy4SbCklNFyUivz+566EjBxSnBWFbx5B6xiopXG8XWGsgC+URf3bHFD5Yf
      Y/W0WDY0Z10TXfibRodttVskTA+9MI0XT1NMtJOZ0IhZm9QjIK3blP3g1ElNgESR0Faf+mj7
      kqqSHGlxKQ59nzPzQ8we+tyvBTsk8rM8ZJ6nrs3H9uCN6H0Y6VbKxRxZP4IQJRqKg4j5KVS6
      ZamcqpYQY1eJzV6lUcwSVQV2RR3+Zfx1QrqikoSXT/47nqqZQC4EsezRJyG5PCaxeIXrkXYO
      11YwNEG1qvA8H8PQcB2blGZzekjnvj0s0M96tiZge9YS/PLvlfHlK9kRtYoFktguXM1qfGq/
      iaEHl9fSkabBo4ctbFdx/KLNTFVwsNMgnfKZyDs0xZfzUiz2YYGJR20QHrq0nCwLDaubXF7R
      A9+coqejlMBXgrLSiUh3Fd++UezmRrtBqu8VSnaOYmoHM16cdraQQ4TCkh6+EmhCLX2vrN+Q
      HsbCDvFgZxn7+hleV5/91dvytwG35y7efO91Ptu9cMKhV6I8NcgXrv8FO6KBT8/ueJmdl7/L
      yK6nKNfvIiJ8/DMv8/Tk96gKyZ2H4ki5epzDBrSHyitiONaPRUONRd7USNfGV+RMCrJZ+L5i
      ZFrS0yQRcpmvX83TL9KNXLP7b9/4tciqlJxA1rQ9hWEsf7pcZ/AXIjjl59HDC1lFBDSnNa5N
      KPIVh3hoeSfabMdZqGmtGnTlQAU7w7J0HyAiXRCBV6CCDSOE1nvsrYapw7HmIqWmAwhd55rY
      JEvcivqkUOjS31I3vaoN7CWDzycZSilCva9zZ12esis4PttALtWDjCaoDfuEdR9BIOz/tnmC
      3aO/AMA48wq7+n6EVyxSlgblUoVS0aZQqFCtehQLVSplF1dKKlWF62zM1o5UwzSldTwlEUIh
      ZZAcV4ggI1/VE0zO+7x/3cX1tmu8Wk6SvPX9y2yUUorBDNyzSye6IinHehpaMfnEyvVN0dEg
      GcqJVWW2bl8FO8DKrWgzYUchg64KHw2F40uSmk3BMwhrHqvruTGOJKcZGfwnLhr72eEOrPv8
      RjldNkOmrDFYjnPWbwkOa7jF591+FPB8xRmnk/O1j1PZewTluTRe/ibDNFLIT7EzHuwC782n
      OH3oKfBcKsO9JNwsGWGwqyEIZPd9hUBSLlVwHIdwOIxpSDKzJRprNz7RJWU4nBvxaYm5lByB
      JySGLlBKkCnBwy0ldKnIlAVj2RidG4hWN9K7u77inSGJZYCGz/7GZXlwcQ32VHBKXb6i1iQu
      2D5NaVIQienkKlUMKQivMZyywURaIVGppZ83mrURzSXvGkTl+sDr5dpu0HEBT8Yvclell7qU
      u4512swSuRX6c1H+Ifa7JN0RusRbzHyCjiraDEII3Hu/wLuwfLSSppNru4PK5dOEQj4XcxF8
      M4pthUmMn6fxvb/hducKjXUexyt1tNWbC46Ei+NnoXzFbFEwmvHIVNOklYO1wXjGdI8ap8qu
      hVgZpQKfL9sDOwqGFnACcROG52zCpkVD/Ma7wOK7y5YUl+c07t5nImVwsPilYQen6hEPCXK2
      xPEUnQlFfUQxNOnSVLM+sfB20Vkvef2ChusLmiI+NtCegPQKpaBALPmd6UsXbkBsq+8RhKSP
      qyThTYLkBQJfBSxSWNvYshjSFc2xZWF2I9fXVVAwXLC44HfjKA3DK6OMCPXuODNaA6cansGN
      1nLX3Hd4O35k43NnP4FYeaaYUgoyE6QG3+ZS7TFebbsXpZuIWAp8j8Pv/icek2c550RIaoJm
      ctheLSFj9Xi90etTHpgl7VaxEfyknKQu5nNPY3GVxi3vaISsQAuolKJUDA6k9n0fU9eplAW+
      7yOEZEekyoUhh6GQQSxi0NMgFw6nWy/zKaU4MSxwfcmx/cZS5jjLEOxpMyjZOpYhiFoCXylG
      Zn2iluD2JnDdIEOdtuIQAcfxMAwd23YwzSCe23N9NH1Rgxnw90II7t9vghCUq4poCM702+jS
      I26JJZapaAsG5rWVO8CigLCaIVr5UCvvM2Qg9Zv4OJ7C9sQKX50AVV/DUZLwhwiiXtmHyZLk
      b2N/gF3bjSpkaO39EVpdA+/u/J0ltWps+H3qxDxtk28xU1SYiRRqz72/FsIwEMgt8VrG7vky
      QjfwZ8dIXnmV3M77eeD0f+QB/yKaBrcn8gyUIwyWQnRXAtXyykeMmArNDZIcWCjailncguCF
      Sg2311fwFER1n1kjyaGGRXcFiecFxF6t2vg+hEIW5XIZ0zTQNI3d0cD9XGpJrg5raCGL3U1r
      5UDFpUk4sMMiV1KrMs4BhExByFy+JoWgoy6ow666zM8XicWilF0Pzwtox/d9DMPAdV2qFQ3P
      81AKLMvEtoN4dtPUCUfMpfaiC8LwwW6TC9cd8iWf25oVA3MCQgYH9lro/QN5KuNzrJWQl7ER
      4axWM1U9RVkLcbDHImKxlEpDw+MXg2HSiSj7kzni5vYmwupkSMGu8M58E695t3OX/QqtmXGu
      2g28f+jLhGevQqUAhoWqlNgx8Ro97R7dqTIPl37BezNJ3ikfREQ+hkxOtwBC04NcnpUi1thF
      XCNCe/Eaj7z3bWLSXjpZxZSwJ1JkV6TIyECBoVgtd/UsZ7o43K1xfL6eymgOETPxKh56SOPx
      7iJFR+ITHFKiRSQKb2mhicSi6BLi8WXXC9NMLGmIIhELpQJBORnyeGsKdi/ctyrQZIEHj4Vu
      jg0VUhKJhHGcIG2OpgXErmlacCStZS3kcPIxdWPhM4lh6LCBq46nAmPe4R2CvgmfN2YEd3Tq
      1C2ogvUmew4q4yt0tVuxQqt59OWHVlSrgtnTBtf0KFptAk83uVSspa/lCWTXfgYGn+dT9plV
      LM/KuhYHbyPWZ6ygM1wM81/XvkTF9rlWjJERNRCKUGm/I0ikBVjTfdyZXI5HqItCYaCMNngG
      f98DW4/8Jwyy9wRfHv0LpJD4lSKxUGBRXwkhgrnSqFfwoxLPFwRRrYqyI0hEPA4ektSYFa7m
      LOpDLpmqTqYsiCgHXwk8FwazkqgBEwXJXM4jZsGOekE6vNjO6sVRiEBrk7clqfDG/j2+r5jL
      K+oS61mkrWAYEmNbh4wba35vjIqvIQhSvBgpk0f2GFy6WqXqKprTcr0QvDXWWtOWideUHo3S
      o5EK17MGPzvwZUr1O9EnB1CuS2/8LorVFF9RP7spfx/bhXfHQ+wK9eM4UB8T5DyPcb8dITWU
      U8XPTKE1tKPpGi8aT6IVbfJTM9SWBplxw9TNnGOKX68J4O09xl9H4+zqe4F7yq9TwUAKQbVa
      RddXH+zT7yQpe1WGJyShsEbMVPi2TYNRIbVgYJwuSgy7iiV9DkYcBJKLFYv2hI1SimJVsCdp
      c8U12Bcvc2Iiyv3dG/dNKbg+rzPhRjjStjHd7GlQXJ6ski8b7GjS8Xy1cPzpx8uKOhWXcFjD
      dgUddTpSwv5dJrmC4uq4szI57krc2H9jUVu0Ut+qUOR9k/N6B/p4L/cO/BCvXOJU6E+IFKbI
      XL/OdI+gMa5uuOovIl8VtHozNI4MMZapp/ZwDR2xMvHJCcr9p6CuDT0cJnbxJfL7n2IxFFyl
      xih7VdTU4I0cKT+REGaI6o6j9Ne2suvVAZJyBk3XqFSCsdI0ied5TDohLFNwIJZlpqrzfiZG
      KO6iEJSQTJZ1xvMGngedyepS/fOORiRpkVyYIDWhoN59dQ5XpkyE5zKUD3G1GGdPLEdrzMNX
      0FdJc87cz1XP4LHoZSy9sL7zBCrJA83wWr+LEQnz7fwxNLtITOX4o+6+WyKSKRWs8K4S6MIP
      An+UILKgli9XFZezklAZ4gkjyJongu9kXDE6xaIrxGZ8/tLruEFXlo1lcWnzGecE/vSJpZW+
      +a3/hUmrmayn88OBeu5uLdOZqBLRPcwttEgQHNo3kJknLD08X4EKdMh3iwscH5jCHYkTiobw
      JgZRXccQkeAQO5FuwQWo6/p/yXvPILmy9EzvOee69JVZWZnlDQpVQME30L6np9ljmmNiOIaj
      oV9DUSuR2pW00iqkkBTamAhJsVpFKPaHInaXuxtBcTnkkkszJIcccma6x7WZnrZAo2EKQKG8
      t5lZaa47Rz9ulkMV0OieNujR25GNiqqb15z7nXM++36s3tVw3nsQQuBlO/mro/85/2jqX2BJ
      n1zrbn++xUbDYcZNsllWNJTkbKFOV9JHKcEP5zIUKyVKSAbyHlfKcTwtCVzw0ykey+5VR7co
      7RdrBp2tFt9xnmSq/1FujD/N8fk3uFjKsPTx/wodz9A/+nXOpDfvKMh1H8p2gd9RP4c+0uz/
      NvUCgbre9B5Fx4VKYwijScx293Ud9aaTJdVMi9EIxC7a98k1zamjMWKWQGA0L9jkvxIgMPbX
      A+wuXtlLk3jnYMceH1EzXwciT9C32z5FbfgxHnz1t8npEn+e+rscblziU/HXaRU7pFwg8HxY
      rNBMt9DMzjcYJur+bW5u8tJMkcXMUeaWF3mybZbODHxzrpPpj/z6tvDvvcEPiffnNlBAmOti
      +nqMI80u6bvRE3NZVAkeaG8gxVb1leQ78iFeGzhO58W/5ESqzKa28dCsuBYnjApzdZOab5Kw
      dgucwBCQjBmMuVmmj3wOaVosl47RZ52nPb7KX//4D/HsFJ/vuRIlNe759l53+tdWzjB74gsg
      TdhY5szaM9iVZf7gRoqfPVolDENW6mDGTLQLw22iSV9/a+rGwRqCJuKrNfbIKSyWNAsVzVod
      +rRCYyDEbhKtKMPBkAJTQJMWe2/0LZoI8q4mwdbDR7kXCrHr2OUwhdd9nLOX/oCH1DXqNZMX
      40mmGMJQrxBqiSGi7o/Ta1CaWCbTKGMIsFCckAFSwuVGjqX8Uc5nP8PJxut8un+DH/pn+Fb8
      DO7jx/b40n/aILw6h5y9DeGi9yMQQmOiqCqL+SDDoL2BKQW+jKNOPMGEkgxN/SGD+YC2uGK8
      JHCXBIOizGtjWQa6THozkRtUaUE9FAy0wg/af2E789QfOMd3L46y0TbAxtmHEH6D789afMJ9
      jawTsjsPaMswGV83mB14ChFPoT2Xzst/yseGFtg0NVYB2jOCV+ZMzp1IsMXJeX3SpTMMyCT2
      5+0chIOImrWGlU3F8EiiqfJEcQKlI8bzHQVeMnLI2d0m9ZZBf8cr594ZbEqNynVy7NIocam4
      RicDb34ds5AnXwiYrcX49sohymYWsTLP3/WvIHavLBq+m3iEN099nrDvePSE55/jL7JfYr37
      wWYLog8/dOCTmnyF0EkhQp9GthetFdpO0F660ayF2JrkijWVxCYgJT20FePfpH+B2tBjnLj0
      Nb4Ufo/7ay8xP32EpZMfYVQt4c/9kI/01ImZipnQJm+4dIcVJjYKlN1oAbINjSEUrwY91M8c
      35YBIQQTp355Z6yNFBcHv8Lk8nE+tfB7tCdCWpOyqVYIENCfDemc/gEL2a+AZbM58Ahx5+u0
      JLY2ZY0UUdNCjUILxVC/xfhkyGI5ygwwhGawKO4gi3t3ii3tpZgWrJcV7XmTncV8a6GXaK0Q
      Iop3RDbAAeffe1GB54YgiPytgO9FvlnDiG6wXveIx63mNrizGlSNFKRbWYx10uVVOMMUsfUK
      Ld2DbDQMnptN0bn0Csdjmk5/mVubOI4HLVz4yD9GxHf4by6e+S2E+c7D5fciBl7/Gp/f/FZU
      eoqmHFooBA1tslITjIZJTBQ5K8AVMX7vgX+Gkiadsy+z2P8oYUsHemGcq8lTlNaepztW43Nz
      /57f6XqAhbNfYdpLsj73LMnSGm5VorraKIZl2myPY63N9rFCUw8M/mPb5/epjvt6HgtBpXiS
      vwz/U4688TWOimnCWJxsW4rWJKRjgmxCMt/ULiqtw3xz5jAfy96kJab2nG+9rEgnNYYBA/0O
      Dc/CNKBSVVybq3O0c6vKLBLiiWWFY8F6FbQQBL7CMgV1XxM3NdmUgdYHTxytFULLpkIjMP7J
      5x/8KpWlfQfeOgHqDR8VKhoNF98LaTQaKKUolzdxXZ8wDIjH97IaC6JO75c6H+fk1NPkdYVA
      C96MHWI0dZanV3oZ2LjGI3KMoi4REwF7i5oFs7LAWM/jiF0UiMIw9r2gDzuqpQodyxfYdAUZ
      6ZO2Im9GxvBpMzzyCY1jC5ZChxk3xvjJr0CmjUrHMXQsjXZrnHv2/2L27C9wPWxnuHqJgt3A
      XV1mzupCDp1jZejjbJQaDLcs49iSZd+kLSPJxiI7oBZIXl1NMnbos8hd460ra1gr41BeQaX3
      NiUM022s5I/xxMI36NBlwvUyN2ZcZDLBoLnIRTVImMghTJuFxBC1iRvMiQFa1AYbriaQacYq
      I5RUC6KxSjohMU0wJMRjgptzAZ2ZnWqvyzMKTEkyEYW+h7tNOloN4imbYmuMlqTkudGA+47F
      QTebNmrddHYKhDCQ0kQIiZQS4598/qGvUllmu3hBHDRzBCqM/m7bNqZpbtnBHwAAIABJREFU
      RNyhQmz/LKXEss2d8zS36xQeXZPPc0ivRIlfGNwIiySDKp9d/xbDzCG2vxNddzM0WFQpLgVF
      Xso9gi9t5F20Qvowwywt8vHS91ipKLQ0UPUKnhdQrTYQQlKvRXn95ViB84e/zGbx6N73pDSV
      1VX8w/fjtg4wKvtxViZ4RIxycuV5RlUXXq4Xv+84I5uvYpVWGUi6jG4mqIg485sGLy/FebjY
      oLy8ymZggFula+5FfnHuX/Nx94c8XHuR5NSrLAdJPDOOdusQuHTNPE+yNMmGa9IIJTXpcH3d
      wrEF8coss233Rz2RhaRcOEWjeJRU3WN1pYydPc2p0+dI53LcGJshCEIyCb29vhmW5Oa0hyU1
      o0uCmbLAQJPPCDpyO7qyCjXLGyGLdTh3wsE2JIY0mvIcqVqRytXkPNpS7+b+3T/SzL7Bbl1p
      98Du6E1EM6gZaYStbWS3obI/nnBrrCA6ai+X++5CHK3hJa+T5/q+gO47juwYiL71U7bi3wo5
      eZH/4cb/yoX1BCOpKq7rYtt2FPK3bbRWfD/2CK88/N8grNiO9tscF/vmy/zS3L/ld0f+KaIt
      qgPWjSqHLv0xXw6/SymweVrcz+SxL/FLU/+C1Q2X/g6LuVqMS34P8y3HyUy9QiysMlt8kDPL
      3+O0M0tnLoYhVNRCyw+wLRNfCVbDOFIrAgSdsQaG0Ly5ZNFnbHDVy3JqpIW4LQiU4ndXHmR2
      5IsIy+ZovIaJ5tF0mZypMLSDEAa+qBAol81Kg2Dm2/QWFJoAraFc1Vy46mI7kpWNgOFem7Ep
      j0+csFguK9arGm0JBnocMqktAd9Rm/ZA7x03k6YwHiT8wHbnwEq5jmmZNBouiUSMMAgJgihD
      b4tKLxbf6xfbEf5IwA+iqdit8iz4cVYDm3rxEOKhz+4qcr63oBtVcOLcTdf5u0XfxiUaoUBY
      JvGERSxu7qIoVEwHeV677x+AFSNx6Rmq6U7oGoZm2kCYyiOVz7YRJQQinmLi7N/hDy6l6aqN
      M3XkCxB4fNs9zRfbz1NIC/48eJCF3DBISc4QfDk/Scwcx+iERh0C16XqehiGQb3ewLajnT9J
      lVjMxoltpSII+loUP57NQRAwux6VVeYSkrXWY9sepQXP5udbN8hZQfPJfAxMTB1HSY+WlhST
      s8coVy+RTkb2qRQaDMHknI8jFVNTDZ48ZnN1LqStw2GkT2IaYtd47fZK3YJbfi1v/avWeytw
      hIh2ASfm4Hs+lmniuh5+ECKlpNFwcV2Phrvlo94pPthZ6TXRRNv67Fxj619PS15t5JlzOnnj
      9K/e2wauFdv2Jqi1BVTlYOrCu4X2PTrnXiYm9XaASG6XIAIIXEy0NNCrc9T6zyF6R7YbjQNo
      afI3LZ+Dlra95xaS+f4nsGsrhLE0utDPyqkv8kqpiCHAmTqPrK0hi33MxA6x4sewpG5mV0bC
      HYs5JBIxstkMjuPgOA5CCBzH2lk4EbQ4mrZignhHKxemFYYUPD8Tp57t23ZTlwKTWS+J0AYh
      DQJRAxQCC1tnsXULwyOPsWY8xkopkoGaq2nNCH7+k0me+miK0yeTLPk2rjRJxgxMY7fafgfh
      3z0uu+sBttB0xx4Iy5LYVoJokkQvSCkNxNjWXfYI9Z3iy/uvsh7aXKeDrkSaMN/3lg/wQUIY
      e9N/RTwV6cNu/Z31GDYtLnZ8jCdWxw4Ys8hFeb7lEXQ8jYild1iLd0G19bHY1rf9fWPpJl1r
      bxJ4HrXVVUYPf2knUGjavFkr0jq5QdyCxOSrVLuPgmGx7NocStYQAkxLYFoWW6pslJ9vgADH
      MXeETjfVWiGwUDxxRAI2WsNY1YTEHnYtaiHMTN6gsngVpU26Rh4inU4jjSiOJDEp9HWwsvJR
      Lky9yZHCCourUdr0xHxAvaF58FiSzjaLSzddzo6YTU3l7oR/66a1BuO/+/yDX6W8uGMUIJoP
      tDf7T4gdA1lIDUIjZGQTCEGzaHovdvPG7L7wQcc5IuS86mHt0V9BJD/4Ti13A9FUMyIDT6C9
      +n72u7s8j6wsEVsYZT3RyYBc334fgRJ8I/lJrhz9T6Iew1JGq26jBqEPbg29sYQOQ9JLlzE3
      5vCsJNpO0Lf8Cp/Y/D6vD3yJSt8D23aUMAxUWy9nai8z5WVZ7vsoamUG0X6IytIKA8YSCVMR
      6kgjkAgQAqUVgY4K16uBgSlgtWFwoxpj2o2xFtjcXJMMFk22HHXtCQ/mbjBrD6CdJFqFGFef
      5nT1exxOrNJhrlGZvMj09Ax2sQPD1oSijhIuizOLuOVVVlarVGqKpTVFZ5tBqGCzprk0Vmds
      xmewy8axd3kPt/+5Q+B2xwj+LzWzF2974N4o8X7v0I5A35rDf3B69UF0elt4ZrOD1578nzC7
      Bm97P/cytFLvOCKttY6KYUKfTz7/T5nKnmQycxxMC69zBCyH9PJFjoSXaZPrtMdKKC2xDGhN
      Ki7e8DiV8VjYNPij3G/gp4tgOcilCXSqFQ5YVMTcNdTqHPrwOfTaItgOanGKWG2ZR8UVpqw+
      1luP8HOLv09DGTxd+BLZhYv0OrP098ZwXU1r1mazEtCqGuRTmkpDM7caMtIhdqXVCOYrgutu
      kTa9RlssoJiOAmFbNqLWmmvrcfzBR+ke6GB9tYKcf47eYrQgB6HGNAUgee1Kg8UVn46UYKjL
      YnFDky3aFHImdTeIJoPYKsy/NcsB9K4CrT1F8fvoTN6Sd/+gTNKdtAjeRmJTQxnM0gqlZfiQ
      ToCfJB1DCAGGiZaS2Y4TzGZOEyTaUUic2hKPud/mXHGFuL07+rkzvrmkJuFoOmVIzC8R2JEa
      GSayyNvsqLrrCGQ7iI2/gs4U8OKt6Eye8Mg5njU+B4aBEJI/qW1ypPQsVTNFS1cvHx0qYxkG
      kSdQcH7B5WjRABSZeMiqI7mxpBgq7shTZ1rTmYpqNaKcpa0VO9yWs+Fsje/cGMPzAhLVNxnu
      FtsL8JbWp7XCkCGnhy2Wl33ScU02IZlY9nh1zqPFhvW65tzJRJM+8Vbh32t7mgf9cZsK5bYr
      //68oP2FlPsnxvYx+lZXK1wTHayc/AzG4J05MH/aYW7M81TnLI45gxcoNhuw6gpODR3ECNd0
      RWuNDkEpQcmzaezybch07o7XE/E0jeIw6eocXqOK0TcSeZB2HZNZnwLfx0nGqC5CtabJpiN9
      O9Qav1pjczOajFIK1kqK491771cKSaVSR0qBbPrnwzAgmUxuy8tqTXGye42Us0EqG7kxd6dj
      KBVlBJsGdLUZLK4EeIEibksOFU0Gm1xGr0/52x7EvYRvu4V/1wS4NYtv/46wJfC3X9V3uzy3
      sv0POqb5wzYCLfhh9nFeP/l3kPnOA8/9/wdorTFKi/xM7Vu0FqNxTNiQSwqWJ0Ngx+Ozs8NG
      AlKphcS9ECttcLnRjZ9J37UpiBDIQi/VQu9tv7Py2N9nOQxAKYZe+h3C/lbQMLvksbFY43DG
      x7bilMrlyJGirCah7s6iqNGEKsS0YriNJm1LIhGlJsjoiaYrJieHzGYB/S13o0FryY8v1hjp
      txBSEjMFjhUZ4Fsq9/lJn6HDcaTcksdbuaT2yuUeZrjoz7dTe25d9fckQN/mO3dGVZm80PYk
      Fx/5LaT59jo0RglNH54MUO256M11ZOsBzbi1prBynl8y/4Z8YctVvKUkSEyhUAoMeXDnllRC
      Mq4NQq14Kj+FPfk1blTP4QmHlcwQQbZ7H/OEszJGZ/UGc+kR/PzAW96/MEzk+KsIGWBacOnl
      BTxP8MCRBOjIu9SWbwWhiCUC3phWnOgC29yJL6XTSaQ0sCwjejK5k0Cn0QilmurRVlxKN8sv
      IymbnPc53G2Sb4nGIZ4wuDbrM9y1FayVeL6O6ka2nvU2avoWjF/8tS9+dXF1HTv0sUSUFrup
      LObCFAGShNjdR/igE93O+7P7Bva/tEAL/rjjFxl/+Ndv2wTujmhU9/jB73lIAxFLHpygFfh8
      pvInDOQazeEUoAWlquDlmwG+EnQVbAx5sJtPCEEmY3JjxkMojaE8nmqb5cH4Tc40XmNyw6CS
      2Wljm1q6zD/Uf8jDqWn6qtfwV+ap+Aa+lYjuc0t9CPzIMG8uNOYbz3C0fg1jcRmjVmdZxalp
      E1tq4nZTXRERrWFbRnJ1AdrTO8awlGI7JUFuexB3vI9VV+C0xLAtg92shOjI/VneDDjcbTZj
      JILWjMnMiiZhgmWFhArG1zTDfTEQu+NQt4d5vuNneTSxjuc1WF1vRO580+D0cJz1csj0q1P0
      hXcX6NlnRKNRurk53fLe5nSG5fu+ELEgvAOI+MFMZ/cqbm2AvRvxpascbyuj2QnESAyuLwU8
      el9qH63IgedwJJ5pMrve4Gy/tR2LycYFnw+f4+Wbc9x0htnoOIPyXNKpSFE9lK4zoN/k2dkr
      9Ngxpt1WRtUQdZnkcePHpIw6rzZG8ANIL75AMa8xAOvYAJ9ojxagyUWfpUWfo+0SmrSIlhni
      q8iNa0m5SxgV2/FXraJnbqpyXS3w6oUyDz+Y3Y45rJcDJuYa9BRNOlv3EoBprZFak00boBVC
      hLQ4mqkFl77OLZaIO2soppsf5I3VQb7QcQ06IqHaqpzJtxiEZ/tY/HGNNtlgKYiRN1zsW0hY
      lRZ4WrKpIrY4KTSTfoqL2fuptA7gY5DcXOTxle/hOhmGwlnmG9aHgrbw/YCKpWj4kLAVAoMw
      lFxZVPT3OEgp2CiViTkOpmlue0WEiCrmlFIIwLIsUkmD+B5OzkhQulM+3alRAnWVV6ZepNWs
      79mJlIZc1qC/aNBPiY/oV1CabV28q3GVuCP4+qUUXfElSr7Aq/ls2SX97Ra1FoNLMy7D+ai3
      QBAYuG7An17LUcgn+EhuBsfU0Kzd3RHikKiPWHTHTiLaHYIwBC2YnPc4ddhGoKJAmRbb+v7l
      my7D7bKpQkXq1Km+kIX1Os/8CFpbTI4NOc0qs4Nhto99i9cq7TyRukYuud8GKGQlq4P9XJop
      M/JIBzNjJQaWb27X+4YaysrhD7p/DX/gPszqGpn1cRLrU0x2P4o4+lBkqGnNn5S+gHTifPTZ
      /51ef5zE5OvUDz/8EwnPhwGRj19tR5B1GKA3lpD5LvBdztVfIJ6SXJ5RhBIMQzN8KIZlCkKl
      8DyfMFQYEWstYRhVN1lWNCEaDZdctoWugsXM+t4O8UGwxdsKlmnwSOvKvvuTApS/49wQQuwq
      M4RnRyVPHlfkOlNM1Hw6T+bpy+3duRMxyZFDMa6MN1BewEopJFbb5OrJ/4yrHYfwr/wrPlWc
      jsZCRBN9qwY5mtQQBj7T8y5KChquSzph0poxqW56KKWIJ+K4DRcpJatlTdaWJGJRLCGa0NHk
      Kdc8HjsqMU3NzckGZtzgUI91oJFv/PPfevyrk26cUX2YYTm5i7S0aYQJQSFv092fIhWTZHIx
      xqdqZHHxteSv1Cmee+gf4418BFJZVK6TeucxyoceRhR69rixRCwJlsNmpcbjmy8xW1GsH/5w
      0ZW8U6iFcYybr6OtGHp5GtI55NoMH6/+DR8vzDKxpOjojtHbEQV0jOYKo5UimUhE0WJD4nku
      qWQSyzKJOU6U0y4ljmNhGILZeZfOzE4bomq1hmpOEt8PCIIQPwip1+rEYs72cfNVaGs196lb
      ETmV4OKsSW3T46P3Z0gnjANtGSkF7a0WHQWbQ70xfMthwU9Tax1imRxnvAtNBjuxk4zDlntF
      gFa0xWGjoRnsVrRlTZIxSRAEmKaJUorVDY9AmZTXFcNd5rbNtP2fiGp9J5cUjg1dOVCez6Vx
      n5oniNuCpXXF6oZiYi7A+J9/87NfzfmTvJz7NJdXk5y2JzCl3j7Z9sM1f7ZMQTWeQS2sMumn
      ePGx/x66hvcPyB2S2YLSOmeWXyAe1rna/0kQBvjuOzOGPwxQIcK00N1HESqAYh/9usLHmSDp
      5FgOepkuJcnH10jG93q2ZLOLvWWZWJZFIhHHMg1MMxJW0zC2MzS1gvVll/b0zjmqtTpSSmRT
      bXI9DykloQqJxyLuVCFgaiOgNSupNxr4foDSmnq9gev5JAyXS+VOzg//BtbyDfpStZ1UjSCk
      XNlEGkZTbYlIsaqbNVJxTZexzuVqEb8wxMv1PmLleXpidbSWTKxLHBMc09iuLUnHTWoNQaaQ
      JZuJY9smsZhNLGZTqhoENQOpBEe67W0d/1bbM+5I2lsMVkqa8QVNzRUc6TLIOiFXx12uT7h0
      Fg26iwJj6O//n1/dKJXoWX2Fm4e/xMRsjdOJue1mCwfN9HRCcmleUPMkk8c+97b7cYXZdoKp
      qxz2ZrjQ8QThzHW86+cxOgfesVF8L0NIibBj0Vg6cZJS88VO6M63EkukSWXyeL5CejdZK4Vk
      UwevsDta/cEoV0N01SeX2DkqFnOwbbv5sZCGJBGPEYs5e64xV1Hkcya+5yObnENhGG5PQMcU
      XHLuZy4scFJfJr6rgYXrehFnp+sShIp6vdEMXCk6chbp9Rtc9brR+V6uJ0/z2lKcNzbbeLZx
      BAvFoXh5W4grDcVcXdKStYjHdoxnIQSb9ZB6NeBwp9wn/AcFcbNJg65Wk2KLwdyKYnEDlIJK
      HVbWFY4G41P/5P/46jVrkAer3+NG0IuX7iCxPklnoh5FBMVujodou5ICevpSVJNZLicffNsJ
      YEIaLLaOwM3zzB3/LKK1A5lIo0oriJa2A1/+TxM+na0zGAu5evVNnPJfE1beICOn6C6YOJbk
      /PU6LUmJbd2pIHw/hIDSmkc+KXb9biuRMfqYprGd2LgFrWEtMOlsj6GVxrZsYo6DYRgkE3Es
      y6I1EXJt0aZcPEVpaY3jyeVtHz2A4zhYlolhSOKxaLLHYw6GlMRNxdorr7EZK6DaenFzvfhG
      go6p57h+6HNMryvmag7LZcVCySfZnmap5jBTiXFpOUUxUY+YpOMwsxLSmhCYxkEu4f3diSDS
      XlrTBh256LNYhnTKIOVsBcKk5KbXztDidxk9/BX+uu3v4S/8v5xMLhCLx2jUG5GOaUbWuu8H
      SClY9xIU4tY7Ip7SrV289oX/G2HZyLlR1PIsojCAmruJbO/7qVWHklIxYEfFIEJAR97YU/jj
      B1Fa8fxaiF0O6e+w73oSOLZEJW2uLnsM58W2HfHWaObbSEkqtbOYGUbk5ZEy8rt8MvEqf9g4
      wY3kWRYqo3S1KJSOWJvNZt9SpaIglmWZWE0Kx2xcc7zTY2yzRDhzHbNe4vMbf8x4KFmSFteG
      vhzdhdZQ34RYckeFViHXLv4Zv3J0jPllDy/QzK0qBpuM1GGoUEo3dypJw/Uj1dCUSGN377Jo
      GfeDKHB4biSGHyiMz/7D//GrZeGw2HYfllsiV75BpeM+xuMnyK9eJqUjOuxGw0VrQeAHeJ6P
      ZVvcqBYpbYRU2/rvcqCbD1krI+pldL0asTq3FCL3ViqLWpxEZvJg/HSxPkTQ/HJrjYKt8H2f
      2anL9GTX9zxnoCAI4Uh/DMMUjM14pBJR15a7QWvWYjOQjE57SDRJWzC1pqm4mkzsYAYQgKWG
      pJA/eNGphhGBVC4e8Npcgnr7cd5o9DHkXkKGNTzPo1ZrEIQRWUKj0SAIIvryeqNBzHHoaLNI
      rV7nExvf5/HwPKEfMNQuOVp5HbEyw0J6GGHaCMvZSbsXAiEl9ZY+Xjm/wVPdy3RnDdpadlTE
      IAipVKqEYeQtU0oRhCHVah3H2Uqr2DG4LUOyvBFSyJvUXR1NgFIYzZ7NdD8VuwBOAiyHimhn
      KBwlmzYxLRPbsrBsE8ex0UpxrZJjffBJ6ubdkW/qwKfn6p+QXrpEz/ILPGm9hJ66zOr8GvQc
      RSQyiHiScOpqFNiIJaN0h5+SidBhKn6myc958+YoJ9ou7GkCAREbwmpF05aN1KF81mRq0afu
      KtIJecdFIVSaKxMuibjByJEEDWnyxnRILB8jlY8xthgigpCkvd+2W6hJWrMmSrHnUw2iRicS
      TRhqLHeDMXGYMNNOuLrAoLOA1gLHsZsu18hSMaRENdkYHCfaxdpbDeY9mzVtM181OdoGrU7I
      iL2EtzzHVPZUVFtxC4TloLuPcv3KPCl/g84srFSiXKmtonfbsQGNYUQrvzQEtm3uEx2tBGub
      CsuRzK3oWyrCDAMyOyV1s1ae1ypDfMa4hmEaewwOw5AMZCq8KhMHGmbaqxNfGaPoz7IhWij1
      PoTaWGK65T708jRTudNcS2Y5zGt8VlxleXaC13KfIch2YY48iF5bJJy9jsy0IXPF2770Dwt0
      GDC8fp5rGwFCCFZXFhk5gMnRMARBsOOTl1Iw1OuwWgq4Oukx3GtjGvtHfG7FZ2NTcaQ/tr1b
      FFot0imDyXmffItJviXFwqrPhbk6PQlFW2rHW1SqhtyY209dr5oFMFsBuBZWGV74FtcGf5Gq
      skmm4ttpC4n4nTvyGFJwtD86ZmrRp1qr0BKP7AgP68BKty0IaUDvCQ7HJ/BDxQ9u2Hz5rI9h
      yKhnAWoXrbom0u73RoH9EP52foBXZgxMvxeRbt3PDbrnoskWxEL1oL8AmsOpMpn1G1SKJ/Yd
      cXzmG3yxcAnLgD8d76HEwxhb1CbdR6KADjCabmds8nXus0b5Tev3eX2mwCuxJ6gTw+g9eqfb
      +3AhDJlfG+fxwxMADCfhdj4d74COjvkWk7gjuTjW4FCnRUvTU6Q1XJ9xyWVMjg/uz42K2VHz
      PK9JHtXeatLemmZ20WduqcFAWhOzIJs2GBlw9n3/IGxOrXAtDJjMPsDE+jUGsnUQBuLWEvM7
      YGPDoy8TTbC/nc3x8shn3zK5ca1wmt9ejSM2a/jdkkD9BaaxN+oNuz1Ce8dxvmzzavsXkIfS
      2znNd54AQrLk9FP1ZknaoNhqpRNdMG4rnip9gz8Njuw1Wt0aI/Y0lgnlOlzNPr53yxUC7blR
      LkjgEww/yusLea40fGRM4aeKmBPnGVx5hl6zzA3rCNOFRxAfou7vt0LYDsuigGlMvKVtczt9
      PxGTnByKc/FGg56CptaIPv1d9r74wW54gd6mBldKIaWkp8Omq2gxPe9x5WadB07enfADtMZ8
      8F38li6+tvnr/NLa7zDU6t5WU9U62kFcXzO54ONtenTGop1weVPw4tHf2KN53A5CCKptUT+a
      zMxL25mksDcdfyfvP/q90vC95QFejn90X6egt3S6j/c8xb9c6uWLla8zmHORMmpPEwXKJMfz
      NUoz/5YXrcdQWtMdzpCtz3Cir4wfap55UxCePUCFaW5X0omjqyWKwQJL6SOobCfx8ReprS5g
      GnN0d4XEw8s416a4cfzXaB1/gWqyHbevWTijFML8cMQONlO9uP5Le/pjHYQ7eW8sU3DycIwL
      1+p0FiyOd7+1t0ypnbJAuSstWkpBf7fDaiWkLXf3Y9jZouhaeJ252OOoVJ4XNk5xWL+EvqUo
      XSnN6FxAPYw8VPPLPg9namTy0TFrDYM/Mp+CZOZtOzxKVpG6B+ldWtdOFcqO6qM1PL00wAsd
      v3ygZ/Etn1oISb14jD9w+4mvjvFp/R2OtZSwjOgiQsJjxUUeVn+OIQRSaN6cDnl5TLNRDqm0
      jKAT2X2b/Z4HjqeoqBi6vglZqHedho6TXHWrXGtsogoDzabXmrV0HyQykWGsQnS9jBYSmcq+
      rQF8L6C9OsK+vUNASYtAbaXp3j6N3PXu3EvNtgQ97RZx5+5UDsd66+M8z8f3A+JNPT4MQ4Iw
      xDJ32B8Mo9nTN1Q86P6AHywmKXWcY6L4Mzy3PEtHMEUQSgwjauztBnDoUBzHijSGQz0O0280
      sE3NG5VWvp36Wbz++96Zty/TxvKG3DMBYEcd0mjqnuAvV88w2vmZ27rV727aN/N4Gt2n+bp3
      hGdWLnPCfY0ziVmKqZCar9l0DdpSIQIwDU0+I4lJxY3UYKTqVDejtqXmfr+2kAbV/l1JcU7T
      sI6n0LRHP28ZSH3Hdo4zzKg7pLw3dgC9sYK2bNAakWvf95zW6jgT9cgL1N9ukkxstfhsfp8o
      09G2BK4fYm+/s90EA5EKWqkp8i3GbesttrBZC0knb29cbkMIgjCgWqtFvYKVQmvNZlDFcaLd
      OpNOodGMTrqcHraYmR7lVTcivXpm9TA/Fx9nsMfA91xqLiRjkkYtpKoijdv1BT82T/Fn1n24
      /R2Qzt8xsn3H242nmFtq4RAbe559Kw18rWrx7bUjjB76/B0n2NuWHGHHqHSd40f6LC+Wlyms
      jVK2CzQSRfo2zvORxvewY5K2FsmEb9G//grn/JdJmiGSkOfd4ywMPIV4l/oWiVgSvTIL9wB3
      qCz0oBtVdKO2729aKR5sGed4r02oNFfHPdqyBrPLAbYlCFWkJqCh6iqUDtlm2daa1VKIbQqm
      FwP8AEwDTGtrAjTrZ28xQkOlmV709xm3u9n6Lo+5ZJJGc+Eyo/LEZsapFBLLNLEdC41CEeD7
      mkQ8Wo9GEjO8dOG7GA9+Fgq99LXESSYkDalJJAxMw0ADQeCzuK4Yq/SxfvRLuMbbp445CBet
      szwcPtMs0N95ussrSf7C+Dm8weG3nGDveOkUQkBLkeWWSL8XwFTqY8wv9fJR9zuIyiL1Rsjh
      +DIDrYK5dTCSFk/Y5/mPy0egZ+SdXno/0jm0W3/XJtU7hQ488BuIdG7/LlcvkwnXWCuHJGKS
      Y4M2L7zh8ujp2HYT6Vu/E4aaN8c8OvIRF84b132eOBfHaNa7Lq8FKDTFXJOXaJvuI9olRidd
      hvtsEOoW0zD6aWUjpC0HhdbIg2NaW/rElhtx68itIhZNw9PML/vYZtTv9+daX2VyvMzltk9y
      Yz3FQy01UikHkEyvWVypdnI1/gClRB5RaHlXYzoLxYd4aeENHmtf3bMLrPoJ3PbDd7W7vKu6
      gxCCoH2Y74aHELUS7eFF7PIs166O8tH7Y7SkJW9Om5DvQ4fBnvK7g7BNy6L1HSlHdG0Tkcmj
      NzcQH6AtICxnu2H3PiRa+NHrCRbnNmh48PgZm2MDJjNLPv2dFkoe163IAAAgAElEQVSxp9pp
      dSPkyrjHycM22UyzibSvuTHjMdRjMbkQ4FgC0xS8ftXDtgSJGLge+GHT6NXwxvUG9x09OJ1i
      ZjHgxOEogKTvqpm5YHE14P5jNql4VLvb0SrpWZ9ETP8J42YLg+U65zd6uBYOstFyBFVsjYJV
      zTNoFYJbg1jqJ470C9Pigj7Bo/r7CLGjDmZkFfSuyrM74D1RnoVhQjrPYvpJ0Jr6ymso43to
      HVLx7CjN4Q5Zn1pr0Irs6DPUYm0EGsKWTmS+M5o4qpkh2BQ2rYIo4/IeMIRvCyGo2O34wRxH
      eg1GJ33yLQarpZByVbNZVTxyOoYQGtfTjM34PHI6tifo1d9pMrUQ8INX6yTikkdORSt2e2s0
      lptVTTLeZO5r4pvPVekumhRb99sBbVnJwkpIb8ed3gX84NU6JwYdDAMMEZJqNkKJjM2QQlbS
      NbPIa7UR/rX3G1DI7rxfrdFKYS1dw0t3Rubp3A3E4XPvym6w3HKMxcqzdGSaJZdacE0NwAER
      5YPw3luPQrBSuJ//cLPMY+4zLPgJ6L79zHTWJhmc/T7F2gRV32e56wHOWKNU6wm+t/bzhGYM
      LBvt1lGr85DKIQToaunengCA13eWyzddcpVRHj3tNIU7snSX10KuT/n0FA3mVxVH+i0MCdcm
      PYIQ6o3IkHRsePxsjCvj+6O2qeRegZpbChjoMNioqOYE2BsYaniatdKdJ0CoNIaEuquYWfR5
      7LTTzADd2a1cX7FWVuQSZVbtGKKyjOWWOayu0SI3ycs1hAz5hv2bCMtGDD/wTodwH3SmwN9O
      38/fS/94O5C2LvN3vbu8b+6TSqoXd0nxydRlFiefZ2XgcYSQ6HolYls2LbRSPDz2NZ6I32A0
      cFjpO4kl1zjdG4Au0bP2ezgoxjbacAM4mlvk9bV2rs4bVB/65ffrUd4xjI4BgvZ+riy8wJHK
      s5RKHkppjg5YtOUMrk40aLgqKkZpCBZXI5Kph0/YhMrgh6+7HD8cTQxzD+/OfmitWSuHeB6E
      bsitr3pxNVKhugsGS2sBM4sBpinobDNxLBif9bGa7svHTsd4+XKDvo4dNWOnigtijuDJh2JM
      LS7xsPfbZJOKVCvYpmym02uevt4CPwFz3p0wET/JZuPHpGNwdS3JYkmgO/y7yih+3yaAXzjM
      dzL/C9du/BVDb/4H7MWbOLaJszqFpV1mDv8sqWCdc9YkQgh8JeiOl6kQFX5LIejLR3pqe8ty
      86ySrvwyj3bCv5q7Sth/5sBkqnsJQgiWOh7jz68u86tHLtHwNDdnAg51m6QSgpNDUUf4hqtx
      bHj9qo8SEmlEFOFrJcVqSXGkb/fL3Qn6RCufZnohoJiVbGwquoo7r3lmMWC1FFLMGfS0G1Sq
      iucvuDx6ysGxBdW6ZmlNcbQ/aiyNiHKB0klJZmuHEc21v7kJCAFxR5BNwfJGlYQ0MBIWu5xY
      XDePv3fFTvluLk7nOZSq8Lfeo/SZ44RLP2Sq8+NvuRNsZ4O+1xBCIEybjewQ87KdYmmMY8s/
      4sWH/lvWdZL7rn6NB6wbFJq9cNucgFk/zokef7sq6SBowDYU1uxl2huTzCYimu97GUIIGsrk
      BJfQGmaWQ1ZLIetlxaFus1keGLkjl9dD2lsNNkObtUqzuB7oKuwXpq3VFq2Zno8mVb5Fcn7U
      o1xVzC5FHE/HDtmkEtE7d2xBJilZWFV0FQySMUlri4FpiqgOoHkPMwsBw707Qo3eqrzaUeVT
      cUkhK6nWNVPzHtenPLqLBq8stvFG62fes8VJCMGkOcQ1t5NS51lOVF/g/tQEF4ORKLP5Dnjf
      I0jCjqFGHuVG/ynGN+bR2Xa81k7C4A16nYvoZtheCoivLfPmSzFi2TgDQylcD9LJ/edcr2jS
      luKxjkluXvkGS8e/uG0g36sIi4P83tKXOb7xDJ86XuLmbIApxZ7imI1KSGuLRAqIyQAVarQC
      L4C1CqTjek/ekOsprk16uJ5msCcStnJVkUlJhnq2KMv3LyTFVgPLhKsTPscG9ifUFXISQ9rc
      nA0YbHJ+iuYWoNTe0tmttGc/0LS3Gbi+5gfBo+9+gZPWTVrFZmFMspVyshW0pmGkac+sEl9Z
      oJa+c47R+7YD3Aph2chMnsLcJTpo4Psew7UrGE1GYhC0GD556ZIJXcZubDI9Vad7ILXPeTCz
      GNCfjwqsz+RWaIxdIV+fpHPjAtJrUE927gSV7hEIIQhTbSxkTrGy3OCBzmVKmwrHEtimwAs0
      rhe1EM1nJDNrJqONAV42H2es9Wd42T/L9JrFSGIW0xAoBTemPY4NmBRzxnZy3LUpn2OHrO12
      thAZtrsn2hbzgx9oltaiSbd9n01yhERMMrsUEo/tTq3Q+8orAWaXAmxbUsgZ/Hi+yPX8x979
      RubNOoCDxnUlzHKh3E2lePItM0w/0ByClCkINpaR+QLVievUEy6eJwlDRaiiSGQ0IXz6bcGo
      TBP4IbZjEIbRS4tepub7P1zhyScKlKqKY8lFBttXqDY0Uy1ZUp2X+eZcJ4s6954ZYu8YdpzR
      wqdZWmxnoPIci77BTec0q6JAIB0y9TF+PGMynTmHGNhLcz7pZXlp6gpmfYNNFac9EXmGzF27
      QswWeD5YhsYwBdMLAeWaIuEIOvIGN2cDhIx2XEPCZl1xdcJHaxjuszGNKEGj7mpsS3DhWsBg
      N3QXo/JYpaJdwA80Y7MBGkGx1aDYarBSMXjOfuq90/23GtjdAj/Xh0/f+x8Ie7uoBppsKgvl
      FVxMLCeGIGIiiBk2QkT0HVtpr0bNxwvAsjXnr7kEsytIFXI0vkl7XrC4kiUWN7azLWM2eOUN
      kr1Fzl34l3wn/yWC3pMf5CMfDClZL97PWtvZbSKCLZSKg5Q4uHJA2DG+3/mb0R99D2P0eXKr
      r9Cza9fv7zS5crOBYyrqnqTuCc4MG5QqAWNTAT1FieNEXUClEAShptHwsW2TVy41MA1JKgHV
      uqarzaCrO0XY8Lh004sCn4GmXFVkWwxGDu0U65Trkj+qfBqvtec923sjguSfzK74QCdAoGFl
      4H7qM+f5TGGJhC2jiCjNbVXs3KLWYNZMvBCSwJF+m8vjAedaKwgBCzWLbMYin4ELN0PqjYBK
      yWU928B7bZSR2mXeNEaY6jlxz9YavxM1YUu31kISnniSmxNvYOgadVcjpSBmQz5jcH0q4Ggf
      rFUEAoPWFpuE42JI3aRCMbAdm1qtjm2ZmIagJanpaDPJNYm2Lo15dLQpgoTB8UPgB2CZ8MaY
      z8nDO7bD6qbkz8qfYK315Hs71u8CO/h7MwG2Uhje6uG1RnsNjtz8C47mF7d5LneEP8LVVSvi
      wJcNLl6p89j9SWananQn3O1jinGfKxMbzJomrJdwCTieqlObm8UQEDcVH1v/G35/5hjhvbgL
      /ATQvguGiaxtUHRqXJ/wOTNo8KOrAV1FAykFZ48nWC0phg6ZzX5aEIsnole15d0UkG1t2lga
      HCfc7vWlNfiBRhBiNzlDt7JVo2TPqDrt5YU2vi+ewsvfnQryEyHwt+tK3inekwmg65sA+6pv
      9h3nu3x87P/h3PGAl6+mSdGgM+aTi+8N8JQagk7HpSfps+ZN8+bTDsdbali7jpMCjukFhA9i
      12VT1k597XTVprG8gHkP7wJvF1opqEe5UGptkWojYKTXIJeSPHlKML2uGe6PJHVhReG7PrZp
      g2CbTgQNrhtg2ya+F2JaktVSSCYpaElJfCVZWA3pKW5Fk8Ut6nfE7/mDuR6ey3wZ7lAT8a7i
      XbAt3psd4MLTqFwXomsooji5DbLLb/Jw1ya2CQ+cTKBFih9ecGmvVTjW6m0PcDamyJsRl07a
      VAxnXBSSegimUJgi8kbciQbHV5JGKPjK2h9y6QevUeo4xWp6gKA4iDDtDy/zhBCQyqKVYpjr
      3D9kbPN7GgIazU0yCDSbVZcwJymXAmSz26RSCsexI0PWi2IutZrPWsmhkDOYWNJshpLZOZ+P
      nrKBIOolrXe8P1LA8/NdPNfyZbDeJ+FXCgIvqjH5CfDeTID7P41U6i1n6BHvMmZao8IQw5DU
      PeiN1SjYIZdWbEbyHlpDJqapNiRxM8SSCmtXmyZPSXwtsMXe1k2BlhGVhxYoBKEWfKRtA0so
      jMpVjpZeo7Jq8uKVbi6c+ge4hcF331X3HmOrs+SWlyUw4lGhnNYsrClakrJZkAvXZ0JODMcx
      DUEQhAgkDdclkYxF5LOWgRAGUkpMy6A047OwGtLfF8OyBcMDFlNzDVJxQXfB3HamaQ3rQYrn
      4194/4QfoEk3+ZPivckGvcstcFQMkRm7wSODcHXKx6pXOZyKuOtrScFYySJQgokNk48XNg88
      hy0VgRI0lIEjIo+Rr6K3o4iE35F7U32PZiKmi7Tl85Q5ydLLv0tvVjDRcgrXzuCZSTZ6H3hX
      Bvi9xFZnyS1MFJ/g9dVxsv4iGy6s1jXtBZOGF+2Q8XizxZKIKBJNy8AwwYnt9aS4nmRjU+MH
      ikLOAAmOBLvNZq2kuDTu099ukk4Kzi+08Hzh59GJD0dv51vxgXmBtFKolXkOFRWXJnwGxRqJ
      5I5F1pkK6UjCVNnEDdjXlGM3TBn1l9qCJXd+vpsH/Er+Bo6heaJ2DWpR+celxV6eHv4vqBeG
      9t53GNy7BL5Okm+mf42TY7/LI/0bFHIGQaCZXwkp5Aw8VxEECs/1SCRjTQJcA6309i4QBgrD
      MGjLSlJJSdIKmkGz6JPLSDIpm0s3PA53m/woeADddkDfs7eA3kpp/4Bztz64Pb9e4dPe91md
      KxH3qsTNvSpMxRNcmhfoep2fKay/pYpuSP221fgoygmOsRXOjz6GgNPmNL98/Z/Teu1pzNmr
      28U596zwN6HjGS4d+jWeuyx58U2Xl6/4JBIG+awkCEJUGGI7FlJGxe2+5xM0WaDdhh8VxwcB
      1QYc6rZo1tWwVUkmRJSJenLI4vtjGVaa/YjfNuqbEAbv3oO/Q3xgb1MkMqxbBR5NTgDN4d3V
      lX58VXIiVX5PbNPbFZDfik6zwm9t/DvWlh3+jfO/Eba9w5f9PkMlc0zpPgbsmwgRpSasbAhG
      Bix2fJ6apOHsJNABMWVTr7skkg4tLcEu7Wo3P3gEKWF+M4449PZUn61iJ5E8gBbvA8AHtwMI
      wTPH/2vOu73A9jIDwFpdYivvnnHM5EyX7Nr1D/o23hb8ox9lqM/m7IjNmaNRIX6gIk6n10Yb
      vHrZZbUcgtDbO580NMlU1Iiut91gbObgntBbONdTfduuyIjwttkqKthf1PN+44N1eySz/KD7
      l1jzbaJJEFFrhxoy5t3UqL593G71v31/5Aim9t61e9DuftaIdxtuSx/nV3cIyY4OWFy87nFl
      PKC7YHDisMXCysFjrJSmXg+YWvDxfPYsTrr5joQQ2KZCl98JOX6Ee4EC/wP3+5ULI/xQPsBW
      10OAQkIx7Sep+QJfRaSmW9A64pPUd5bXWxAZcPuFX4AWbyn8K0GC5eKZt3PBO9/N2+yo886g
      98RFTENwdsThxGGL9rxJzJG3ZaCbnAuwgEdGTCZnfC5e9ylthpHwo7e1oRbbRdr708611qh6
      dYfU4B7GBz4BhBBc7v406w2JFGaU867hTEfATb+FH6+3suZF2+y6Z3BFFfiR30PtbaRwVzcb
      bKxVcRshjUaI2wip13w2Kw2q1Tuv7PXQ4C87fhWV6/qJnvP9hhCSxbBwx4VCE2Vx3oq6G1Wf
      peOCI70Gw12SVy57XJ8O9kTQe9s0bfPPR0wPe64toibmob+9Uukw2DchdBhEJAcfID7wCQAQ
      5rp4SZ6Kmh2U61QrLiIIGE7XGcm53NhM8GylnXqxh5MjKQ51mATq7g2ErbC963popanVGvh+
      +Ja7iK8E/z7/6ywMfvwnfMIPAEJwmROoO6jxqbhkdMLnm8/WuHQjqk9uuKqZGr13fHuKBksb
      UanlaklxbdLn0pjHiL4MfrSI6M31ncub1p4IuzBM9qWfSOOu2RveK9wTPj0hBK/1/Tynxi6T
      kh5hqNBugDQECelytgBTxOktRKWRnTnB1aUcy5s1BpO126RANDO6gETCQamop0HUvice6bFS
      RuWWB6hAnhI8K8+yPPTWdaX3JLQmGy7fMWGyr8NEo/E8RX9RMnrTxw80dU/z0hWP+4YtYpZo
      cg0JbFOTioHvK/rbDWwLbi7pJgcP6FoZ7XvIXPv2NYzVKVABYWFw3/XvhXG9JyYAQNjaw3eX
      fpZfCf4KKWRU6CLZbgod1nby5G1DcOpYBjdIc2PaxV2rMBCvkbZ2tuJI/KP/S2OH2BWajv5t
      HLwNPPv/tXdmsXFd5x3/nbvNTnK4jYbiJkqUJUWLIytOZLnuHqNGjNYFWqQtWsDIQ/uYp6Lo
      e1/6XKBA+xLAeUmANnAaJGhtBKkdb1Fty5Zl7aJEcRGX4Trb3c7pwx2SQ3FISpZIXpL390JI
      nLm8597zP+c753yLd4wPz3xv17lHLGHN3uOvcu9s6B/1+Q0HS4e2jEYmqXGiP2jreMHn1qiH
      7yswBWMFj8M9FpeHfLJNKyO2QGBp/rKZo3WuLpWlygt0z3xAb6bIu6wVQBgI1dudSfdhSwOE
      Wg7KNmo1ZDVdLNuQSwuxmCk4fijOqa+3c49W6solA/VL38cfaebTPZDZvfUIeqpXaEvLDdsu
      peJ4v0F/fvU4mG/TefFUkE3u5ojHQjnIZdqUMbgzutpmtwwQdmM3lcTIJ7w2cJsu/cGO2/rr
      ESoBzB/8Ov+ZeJWZqrGcnVgIQVkaGHGz4daPqNmrrni6k5kp7c0/tEUotfH++6bf9z0OmyOP
      tAvTUCAKpuckF686HMwZfPNUjGf6TITnsliSdR9TuMpY4/6sXJvE6Ce8nP6IVFwELtczo0/U
      pq0iNCYQBDsXd458h3+b/hpn77/JBe0KSVNiaYKFSq0m7ZJLQp39KAS0tVlcmu4kVi1xPNOo
      rNPGbJZmfFtxn8zNVy0UONo8B8szYeM2xWManq9WpV9UCobGXRAaBzsNhsY8LEPQc8Bgvihp
      SddnoYBfLJ6HrpXT4Jax3/Ci/j4DnRWaUsHq6ovZdugP5y5aqAQAQcf2Ogb4qP37fDZ+lT8b
      /3eEU6Y7py37uUspQau92Nr7GMjpkEvx+U2dilchoT/ZKDqeOvykTfnKPLEXqm5w81aVlOHh
      m/qy/z5AJqPTlNFJJwTtWZ33LtvkmgWartGTCyqqZ5sNWjK1IulKce2eixCKgS6DZFxQsgUf
      TnTxmf4NyvnjK6mCPJcL1m94tqvK0ovxfRixjoXi0KsRoRPAEkII7Pxxfhz7Pi998s9kTIfu
      1viyWbRUE+rh0e1wb4zRL+McTq132rqyO7T2N8G1xt0Uhdzpp9ia7UUkM1ipLKc6CrXntfK7
      xYrH3LTLB+MSTSmSMZAlQdVTXLNj9OVXYoAheA9GbeBpa9FwXPiPB89zNxekOln19HUD6a1s
      RCgUjqcoxh/fW3S7CK0AABACu7UXLdWCUS3gevE1BeSUUlwbU/iuxJeKkgOn49XNLszDIqgX
      0gPRjp9pD4Mx9JUQhsUvk9/muPNjEtbqQ6pMIjjgKtuKowf0ZXFIqfh03CeTXDtSSxUUxJgt
      Cn608DLTnc823B0TQjAqu3iO28v/d3/WwmnpWfdZqgYmLYByqtsSjxGqRfB6LFqtKD94EUss
      Pbj7BUXesjnZ7nCm00V3HEyxnh/R5l3aU4KPul4NvdvzZhTbBvlkroNHaTMEBfPOHFB8erm8
      pkzr0rP+1dQRCh1n190aVkoR1+o2DxRcq/Zt3JHHbwfB7Q+zTZn9Qi8AIQSunqA36TA+4+NL
      tewbVHVhvqTIxFZeWEsyCJP8qm4oF+Ughd7zT+HOdxah6XwQf4mKs1QwegXPV7gNdiUNXXCs
      E64PBekVAcpViaGLoMi1eRdlV9b9m01TX/BC58jyv11PcUdrXOtZKRkEF3UdCdwmHr7/bTok
      C/0wp5Qi7hVJGXC14DFT8Em5RSa8OAlpU8GE7Mq03ZoW3J7M4tuKr8XnMPUlJSwv1R66PvgK
      qlJnQcb5uPc7TyXfTBgo5k7w7t2LvJwbXlUB5vN7Pu2Zxh2sOSmwZlw+u2STTBl4us6ZZywE
      gkPtLtbkEG7+RMPv9vi3ScVWYgfG5gyKzYcaJ/USWpCKbocJvQCoFjnqDiFMQb+Y50FRcbil
      wkF3nphpYPuCm2NZ+nIGCRM60tCRNimUBCMjFn1pp+40dHXnd6VgyM3yX+lXqDZ3Q6oZcoe2
      vYlbhRCCWdEC3F/9CwW97Ws7n1KKG2OSfFpyIicAn8/rvJ0tkw3PFu5oz+D6V7Fqvepa6SCi
      Kf3kDdlCwi8ABYZQVDzB6KLO0aYqUvrEjKBoW9yAfjnD/bsxvGSa/k6dhAltSRhLtzJcmqU/
      Xa27XPACJ70Ub3b8BZNtJxGt+R1q3NZT1lKrkl9B4z0wpRTD05KMKcnWVZqxXA8pQdMU43MG
      TrxtXbu5qiVxPYFlBNe7rgZDn25mFwhAIlBMVzT6Ug5x3ceXtSm09mxNDQYyNo5vc2coSf5g
      hrYUdGRgej74UL3P/5Sb5I3Bf8TuPLJrd3oelZHEIGXnQ5J1a0rPV9yd9Onv1Lk+6pOKBWag
      8CRdbasPxVwPCiWd/505xs3MebTWzgZ/pfb5tm7efHCGY8YtvnSPsNhxaiub9lQIvwAWpmmL
      eYx5m7vNWjogBM21TYfZkqQqBbI+i5mCT2NnsDt27qBrO/GsNFVHJxnzWRr7DR2KFcX4rE+T
      JYlpYPuCA611DoPAxIKkKDUuXctw+9Qrmx5mCU3nTtcfcVvKXeNEGHoBdBaH0IVi0RVkLBdf
      eqyexFd28KWCgmNxY0IG+YHmFtFqmR/qPo70/QZh3nsTkclyY7iF86lpFLVUJEBcV2i+Ite8
      9BQe/qmIm+A6KnAXf4xt4d3S+SHk26BKKfKVYWYdjZSwSZterVyStnwavOL3GaToe7FtjgEK
      JEpzJITkZIuNCGSwfM25+PrT+F5DaDofZH6fKyOK8RmFUsFpbn8rdNbtBEkfPDcYFqpuEPfb
      koSXjoDdfiQUvvtbQagFgOdypHyF8SJ0JR2gVhZH1I9Wa+N8K56GJwWHMg66VqsfS/DjsjzE
      vcFX9+wLbcRC2zO8Y75Isehw7Z5DV6KK6/gsLlRZXLSpVnzm5hYpl6vcemAz7FncKgTOh+/P
      9zDS9Vs73YQtI9wCQOEKg7InEMjlYnlLnVcqsGW93SqwPbg4lSQXd+tMn0AARd/k7d6/xk+G
      u57wVvCg8xypuMaxvKKjycCr+ewoqfB9HytmYZomJS2OqQsMJMOLMd5q/+6mheZ2M6EWgCjN
      cUBOYyp/uTMvdX6lBKDhKT2oWFgb5McqJs8d9Bl1U9wvmcv71q7U+JXxPJX88R1oSQhINnFR
      ngQFiaRJpilGpilBU3OcVDpGOm2RSOoMNHkkq1V6soK39Jcgnd3pO99SQr0IVvE040UNU9lU
      Kt7yDKBkMBt4no/vK0q6Xgt5VMxVLHqzHtk2jZmKxY0Fg6PpMr8Wp/n89Pd2PBflTiGE4LPW
      3+WF4pekqCCERrlcIZ1JoiQILfCsjWmCdEbnJ/PPMtL30p7fKAi1ADQUOpKSq5C+REqFkgrH
      cdB1HdM0aoHuMohfFVCxPRxbYhgxWhMShcb/zWR578LfIeINaqzuI4RnI4SGYweDSSwWw7Zd
      dE1Hej6aplOqeLxrvsjlvj/ZF4NFqAWgFwv0NknuESORDIK0fd8nlc4gWHHlDXzeNUASSyVJ
      JFa8Cyu+xvsDf4lI7z+7/2H8dDvTswaD2cCmdzywXYGjwHYlN6rtDGe/xVD+/KblRfcKoRZA
      1+THNFk+SulomsIwNOqXLWLN3rXGhJHnZyrPyfIVLOFzMXWOxcMX9vxU/iiIWJKfan/A7xTe
      4ZZ5lMlEP/PpA4BACIVsyq0NctnjhFYAynN5pnQZXxdYwl8OzxP1R7oNXtW303f4Yfwcbxz7
      m6CETrJpX215bogQVA6f5+fqm2tG+P1yMPgwoZ3nrMlbnBJDjJYM2uKPnijX1BQ9C9eCEjqp
      5qjzN2C/mDePQiifhJI+J4Z/TsLwmStDRzyw6Vd3ZrVuUtu8N/G42XO3HaUUsjS/07ex7wmt
      CdTjjwEKXdsoOmhJBCvpPxZcnbe6vxv6+l4QFAmJ2FnCKQDps2C04MtJqv5GJozifjnOA60T
      28xwLzXIcO85vI7GUUhhIjLNwkE4BaCbVIwUs7ZGR2zjKiIl3+AXZ/9hlb0fda2IRyWca4D5
      Kc56XzBrG+QSawWgFJS9IPC9YLQj4qldPaJuFGgesbWEcgYQTgUUTFZMBlNrO0fJ1/jXzOt0
      aCUK3Ud2fQoTEdvGAtMRqwjlDJAsT/GD2bPcXEjgNshwGNMkCXeBkexJKvkToY87jQgvoRRA
      pjxO1cxwKFXBbHCHhoDsg8ukyxPbf3MRe4rQ2Q7K95n00rRkHboXXUqeIG2u3tMveDHuP/86
      XmvPDt1lxF4hdAJA+VTuXidlj7PQoqN8k8Hm1YXsFmQcN5GNdnsinpjwCcC1EdIjrbs0W96q
      tJFKwUXvEB/lX9n3rs0RT4fQCUBVilgLE/S1zWMIRWdyJYnliJPmf579+yCDW0TEUyBUi2Cl
      FNb197iQL/F8R5mqr6NrK/Z/XLgYldldUYA5YncQKgEIIXBP/yHDVj9pw8f2WFXppcOyef3m
      P5G/+rMdvMuIvUSoBADgfvw243dHuTSbRkeuOeHNaBXsxN4O1I7YPsK1BlAKpkfoTTl0x23c
      h07BSr7BG7m/ZabvhWgHaL+hggNQWz3dMTtcM4AQxE2YtXVuzep0p1Zvf16Sh5juv7Cr/X4i
      vjoXMvN0GM7mH3wMwiUAwE7niBmC5odqW931Wvmk+9UduquIHUfALxeyTHlrq8k8CaETgGg9
      wGRFZ86z+GJmJajlv9teY77nXMPvKLuC8pzQR4FFhI9wrfuGP2kAAAI3SURBVAEAZcaoxFuZ
      cquYrJwBNDnTTK33HdeGt3+IJVz05jYq3/jzXRERFrHzhE4AWttBZKXEbceipd3li3koujpK
      XUUNFBGJBiV3XBvZnMebH8HJn962CoMRu5/wCaDjIMbgs8SH32fYTjMjdJTQSZgKnCo0EICW
      zSEu/CnStcGMRYvkiEcmfGsAoaF3H6XgJZgq62ipZqp6kpw/RfvEpQ2+JxBWPOr8EY9F6ASA
      EOh9J2DwHBWp8+VIlWqpTELz+OOpH5EZvbR9rhAKmurrC0TsOcInAILRXD/3MvK5V9CExK9U
      uDKXZKqkeO3Ov9D5wQ+QQ5eRC4XNL/ZENxIE2Ge0SAB7ldCtAZYQZgz9+LfwsgeYuPJrpkav
      MZHso9w0AKd/D5FIb4u5My9DOUZEPCVCKwCo2fX5Q6hcHzhVFoevIVoPoCczO31rEXuEUAtg
      CaFpEE9iHD2707cSsceI5veIfU0kgIh9TSSAiH1NJICIfU0kgIh9TSSAiH1NJICIfc3eFkDk
      wRCxCXtbABERm7DnBNBq1GWSiDyjIzZhbwhAgaiZOzPu3mhSxPawZ3rLsrlfG/WNaAEQ8Qjs
      Cme4TakzdfotH1cJfAUPXBGZQREbsjcEAByO+5xK+Vwv6YxUBR5R54/YnF1tAnWZklZD0qJJ
      frvZZc4TFCUcsCLzJ+LR2L0zgIK0rjigK04kfX4ybTHr72o9R+wARqfRoAzjLiGnS55v9vjp
      tEmTpsjo/uZfioio4/8BNisS94iFAycAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdoUlEQVR4nO3de3cb553Y8e/cARAAQYLgBbyKFGXZkixfEjuxc3G67W6TNknjxJvLbnu6
      3bbnNK8ifQvtafePnp7d7SbZS66bE8dxbCdxrCSOLduyJVs3UryTAEkQIO5zffoHKEqWSUuk
      JVggns850ACDmcFP4PObmeeZB88oQgiBJLUp9cMOQJI+TLctAXzfv12bkqSmkUcAqa3JBJDa
      mkwAqa3JBJDamkwAqa3JBJDamkwAqa3JBJDa2p4SQAiBY9v4QQBC4HrenYpLkppiTwlgVzaZ
      m1/gnQtTFDey/Pq3r96puCSpKfS9LGxFYmhihd5UivNTV+gwwHZ9dLXRFUL2q5NazZ4SILc4
      xXKhzlgs4MjkBNNXZlEUBU1rHEg0TbsjQUrSnaLcru7Qvu/LBJBajmwFktqaTACprckEkNqa
      TACprckEkNqaTACprckEkNqaTACpre2tM1zgMzt9mWLVZjO3yuziCrLzg9TK9pQATr1KKj3M
      3PQ0vqJjb6zj3KnIJKkJ9tQXSDcMpi5c5tDkUUqrC1jdKUwh8INAdoaTWtKeEmBzdYV6oLBZ
      2CCzskY41oU/1I++1QdI9gWSWo3sDCe1NdkKJLU1mQBSW5MJILU1mQBSW5MJILU1mQBSW5MJ
      ILU1mQBSW9vTlWCnVmJqZp5EzwDUC5RdjSMTo3cqNkm64/aUAJoZYWJshCsLS6iYhKhTEwJL
      CIIguFMxStIds6cE8OolphbWuefIOFMXFwgQKFvvKYqCoijvu74k3W32lAD1ao3Ad8iuFumK
      65S9ECFFAUVBCIGqyiqF1FpkZziprcldttTWZAJIbU0mgNTWZAJIbU0mgNTWZAJIbU0mgNTW
      ZAJIbW2PI8N5XLh4iUAIFmanuHB5Ro4MJ7W0PXWF8F2Xmm0jhE++UCEIBJ4QaEIgZIc4qQXt
      6QigW2Eilg7CRyg6pipwZJmXWtiejgC1UoFyucriygaJqEHFCxHWFFRkZzipNcnOcFJbk7ts
      qa3JBJDa2o51gMz8FBdnllAUhYHRw0yOppsdlyQ1xY5HgM6efqrVEocPj5FZWmp2TJLUNDsm
      QDgS5fjhUX73u9P0D8lRH6SDa9c6wOzCEsn+JIXMQjPjkaSm2jUB+vp6WZyeJtTV18x4JKmp
      dkwAEQTYgcZXv/Z1RK3Q7JgkqWl2TIB6cY1X/vAKz//y18RTA9vzPbvK71853egMN3OZ85dn
      mhaoJN0JOzaDhhN93HfsPh5++EFef+M8YwNJAFTdIhHvQAiXudkVoskkXiBQhLxLpNSadu0L
      NJyK8+N//jmPfvKJ7XmKqqIgAJVoIkFPCCq+Qqch7xIptaZdK8FX5pdIDSTJzl3ZnmdXNhFC
      YSmT48jhYUQ0RafRlDgl6Y7Y8Qjgui6pZJLX3zzHA4//8fb8UDTBvfcmtl9HYnc+QEm6k3ZM
      gLdOn+LM+StMHp7EMmR3Ieng2rE7tBCCmamLaGaYWKKb7s6b7+pld2ipFe24e1cUhfm5aZaX
      l9ksVZsdkyQ1za7nN6aqsLyywmap0sx4JKmpdkyA+cvn2KgGWKaJLk9rpANsxzpAEPgEQWO2
      oqpot/BbX1kHkFrRjiVbVTUunT3NT37yE85enG1ySJLUPLteCd6s1PnIRz9KLN7VzHgkqal2
      PbfpTXby+utvsHFdJdh3arxy+nUCIfDsCq++/lZTgpSkO2XXI0Amu8bgQC+ZlSwTQ43fBCia
      QTQaRgiYm1vENI3tEeFkZzipFe2aALGOCEvrGwyOX+sOrWo6mgLCt6lU66xkMkwcniQaamxG
      VoKlVrNjAlw5/wa5Up18vkDKdbbn10oFPC9gabXA/Q+c5FBpYrvwS1Ir2rUrxNzcDCMjo8zP
      LzA2NnbTDclmUKkV7bj7rhWyPPPMMwwNjzB57OFmxyRJTbNjK1Ckq5+PnDjKWmaR7Gqu2TFJ
      UtPs2gxqxXvoT3WB8JoZjyQ11Y6nQKtLs1SrNbp6R+kfksMiSgfXjgkQikQprC6wmC0QWAkO
      DcmxgaSDaccEiHf18LHHP025WmF+RY4LJB1cu9YBVhZmeOvsefoHh5oZjyQ11a4JsLqaRQQe
      mcxqM+ORpKbaNQGSvQOkB4exi1lym40OcZ5T582zZwkCQWE9y+k/vIaz2wYkqQXs2o8h8Gzm
      F5c4dO9DJDs7GgubIUKmjgBcxybR14chBL7sDCe1qF0ToFgsM5Duo7iZB0aARl+gbHYVqyPO
      6vwC0UQKX1G2fzYpu0JIrWbHvkD5zBwvvPQyRx94jHsnBuVPIqUDa8eSffHKHJ/93GfJZ+fl
      3d+lA23HBOhPdvLss8+ztprl7an5ZsckSU2z642ybdvGskwcx8U0zZtuSJ4CSa1ox0pwvbjO
      d773QybGJ8BK8MRjsku0dDDtmABmpJOPP/oIQrUYkFeCpQNs53GBdIPVzDKVSplSpdbsmCSp
      aXb/PYAKszOzbBRKzYxHkppq1wthRihMKt2JHtjNjEeSmmrXI4CuG0y/c4aKe61lRwQ+V2Zm
      EEKwtrLAzPxyU4KUpDtl1yOAHonzH//iL7lwaXZ7nu/a5AoFRoVHrmBj4lIXA1g0RpKQfYGk
      VrNrAoh6iWd/8TwjR05eW9iKEI+EAIGqaugEBFwr/PKqsdRqdk0Ax1f5oz/5HJZ+7SypVipQ
      LJZZWN4gYvmUPZOwoqAoCkIIeSFMajm7Xgk+/dKzvDO7zvGHP8ZD903cdEPySrDUinatBAvV
      YPjQKLpfb2Y8ktRUu98jzLS4cv5Nar68E7Z0cO1YB5i9cIbLc0t87F88yX0TAzstIkkHwo5H
      gIXlZdLpIU6f+jmzi5lmxyRJTbNjJbhUyJHb6gIRSyRJJuSNsqWDaddWIIDA9yhX68Rj0Ztu
      SCaA1Ip2rQQHvo/r1FjLbSCv70oH1a4Xwn79i59QcgSZlVU+/a+/xNExOT6odPDsegSIRmOY
      hsnRY8cR3o3DXwkyS3NMzy3Ko4PU0nY9AkQiYQquwckHHyYRDd/wbkB2vYgmAryRQXRkZzip
      Ne2aAB3RKPX5y7z5zhSffuTEu98MfBCN0eDcAFQChBD4vn+n45Wk22rXBIh39TI66mDEO9/7
      pqLTETaouRaWqqApcmQ4qTXt2Az6xqlnObdQxDB1nvziFzD1mxds2QwqtaIdK8HHHn6c+8bT
      CLvGpZnFZsckSU3zvhfCQCAEKIpy0w3JI4DUim5ym3eFWyj7ktSybj7ssyQdYDIBpLYmE0Bq
      azIBpLZVKhZvVgmWpINpbTXLP3377/Z/BFhZmOH85ZnbGZMkNcXSwjzf+863+fyTX97vEcBl
      enqeeKqfQAiEvEuk1CLmZmb42T//iCe/9nX6+gf2mwAK8a4kKdNn01PoMmRfIOnuJoTg7bfe
      4qVfvcB/+M//lc5EArjphbDd6IwO95Iru/TLUVOku5wQgldf/j3nzpzh3//lfyEau/Yb95t0
      hbh1siuEdDcSQvDSr37J3MwMT33jzwiF3/3bFpkA0oHl+z6/ePqnlEslvvTVr6Hr7z3hkdcB
      pAPJdV1+/L1/QoiAJ7/29R0LP+y7DiBJd69qtcL3v/sdRkbH+NQf/UtUdff9vEwA6UBZzWT4
      wT98l8c//QQnHnjwpl35ZQJIB4IQgksXzvPCz5/h809+heHR0VtaT1aCpZYXBAEv//YU58+e
      5Svf+LPtNv5bIRNAammu6/L0j3+E53l88ctfwTDNPa0vT4GkluV5Hs/97GmSyR4ef+KJ963s
      7kQIsf9mUN+t8+bZ8/tdXZI+kGqlwj/87d8QjkT4xGc+s/fCHwSUnnlm/0eA+dk5Aq7dHTII
      AtkZTmqK3NoaP/zHv+eRxz7ByYce2vuAbEFA6Xvfx83l9pcAwquTL1ZYXVujMnmEDqtx7r/X
      LJSkvbp88QK/ePppvvjUUwwNj+x5feG6bPyf/4vWGSf1zf/2wSrBhUKBxFaNW1aCpTspCAJe
      PnWKd869xVPf+PM9tfRsb6NSIfe//wrr6FFi/+ZzKKoqW4Gku5/nefz0Rz/A83y+8OSXMS1r
      79vI58n9j/9JxxNP0PGpT25fIJOtQNJdy3Udzp87x+9+8yLHTpzcV0sPgLu8TO5//RWdT32F
      0Mn7t27sHhCsX5JHAOnuIoSgVqvxxquv8NYbrzMydohHH/8EyZ6eWxqh8IaNYU9Nk//rv6br
      P/0F1sQEwrPxZn6Ne+5HoBkyAaS7RyGf5/enXmL60kXuf/AhHn7kUTqiN78/3W5qZ86w+f0f
      kPzmN9FiKu65H+Bd+RXa8CMYx55E6x6XCSB9uIQQLC0s8PuXfsNGLsejjz3O8Qce2LX78q3w
      Nzcpv/BL6m+eIfHlxwgWniMor2Ie+3fo93wW9JCsA0gfLs/zmL58id+/9Bt0Xedjn/gkhyYO
      73snKoTAXVyk/Nzz2BfexOzO0zFeJVjxMB/8c9T+4yjqe4u7PAJITSOEwPM8zrx2mtN/eJm+
      vn4+/qlP0z8wsPfz+6vbDALqZ89RfvZZ/Nw0VmodIyUw7vssxr1fQI32vu/6MgGkOyrwffL5
      DZYXl5ibucLs9DRHjx3j0cc/QSwe3/d2hedRP3uO0s9/htg8R2iwhDGYxrz/q2jjn9pxb78T
      mQDSbRMEAZVymezKCgvzcywvLrCZLxCNx0gPDjE0OsrYoXGsUGh/e3whCKpVKr/9HZUXX0D1
      Z7AGK1jHH8M48RRqcgJFubVmUiEEdc/bfwLMTl1gbaPKA488hIFMgHZz9XQmu7LMwvw8S/Pz
      ZDMZLMuib2CA4dFR0kNDdHUnMYwPNnaOEAJ/bZ3Sc89Rf+0ljI55rMEA89i/wjjxFdTEzbtE
      CCHwgoDZjRxvLS/x9soKuWpl/wng1MpcuDzPsRP3wtbIcLIv0AElBKVSidz6OmvZDNmVFVZX
      s3iOSzKVYnB4hKGRYfoH0ugfsLDf+LnOpctUn38Od/q3WKl1rMNp1GNfQp/8ExQj9L6r257H
      7EaO86tZzq2skK9WSMc7OT4wwPGBNOnOxH4TIOC1V15leHySnp5uVOQR4CAQQlCv1ygWNsms
      LJNZXmYtm6VY3MQKhUj2pOgfGKA/PUiqt5dwOIx6B/7mgW1Te/0Nys89DZtnCKUrmMc+hnn/
      n6L2n0BR3/uZQghsz2OhkOfs8hLnVlbYqFYY7urieH+aE+k0qWgM44Z4950AubV1XB96+3tl
      ArSgRmGvszg/R2ZpmWxmhbXVVVRVId6Z2CroaVJ9/cQ7OzEMY98tNbcaj6hUKL/4ItVTz6IF
      7xAaMzAf+DzG8SdRon3v+fwgCFivVHh5boZzK8tkSyUGOxPcn05zbCDNQDyOvkOyXE9WgttI
      pVxmcX6eK1OXWZifI/ADhkZGGBgcpK9/gFRfL5b1/qcVd4KbyVB+7jns13+OEVsgdHQE84E/
      RT/yxyj6tXiEEOSrVd7JrvDm0hLTuTU6DItHRsc4kU4z0tWNuscklQlwQAkhKJdKLC0sMDM9
      xeLCPCIQDI2McGjiMCNjY4QjkQ+t3iZ8H2dqitKzT+PPvojVV8A6/lGMB76BNnASFJWa65Kv
      VpndyPF2ZoWp9TU0ReHe/gFOpgeZTPUS/oBHJpkAB0QQBNSqVeZnZ5iZnmZxfg5VVRkcbhT4
      weFhorHYHT2NuRXCdamefo3KL38KhVcIjQRoJz+HPflvWQgizG5sMLeRY3GzgOf7dEU6GO3u
      5r6+fg6neuncbxPqLmQCtCjXdVjNZFlaXNhqglxBVTVGxsY4NDHB8GhjD/9hF3iEwK9UcK7M
      YF+4gP3m82i8w0qPwSudDzHT/REqQsfSdUa7uhnrTjLa3c1QIkHMur2FfScyAe5yQghcxyG/
      scHy4iKLC43C7tg2PaleBoeHGRweoT89gNWEArMTPwiouy5V16Vs19moVKhsruMtT2HOvUVk
      9SIx8oSiAi85zIX+z1BLHWe4O8Wh7iSd4TC6qn4oscsEuEsIIQh8H9/3KZfLLC3Mszg/T2Zl
      mVq1SqKrm8GhIQZHRujrH6AjGv1A5+9CCILrHkIIfCFwPI+a61DbKtA1p/G88bj2vOLYlOp1
      iqVN3FqBnnqGbneVfm+dEbVMX9ikMzmMkZxA7ZlETU4SdKTQw4mbFvSrRTIQwfZDCIEgwAt8
      HM/G8R0cz8b2bGyvfu311tTxbVzfww8aDy/wG1PRmAaBjy8CmQDN4joO5XKZcrlEuVikVCxR
      Km5SKhYpFYuUy2VAoCgq4Ui4cXFpeIT+dJrOxM6F5urVzYpjU3Gc7cJadV2qjkPVbcyrug5V
      59q8quNQd10EoACKoqAAeB6G5xMSAaHAJay4hPWAsOoT8quEvCphbMJaQNgvEy3O0yUcwj0D
      aKlJ1J5JtOQkSmIENdyFAFzfoeyUKdslynaJqlOl7tWouTXqbp26V6Pubr32tua5NVzf3YpL
      ga2pooCmaJi61XhoJpZuYekhLM3C1E1Mzdx6z8LQDDRVQ1d1NFVHVzU0VUdTNTRFQ1M1mQAf
      lO/71Gs1qtUqxUKBQiHPZj5PMZ+nWihgVypUyyUC16UjHKEjHCYaChMNh7amYTrCYfRIBEdR
      qAtBVVWoqCplVaWCoOw4lFyHqudSd22cWhW7VqFer+E7dcKuQ9hzCPselu8SFi7h4No0JDwi
      BkR0hYgGESUgpPioeCjCRfFrKLhopo4SMlAtHXQLxexAiSRQw50ILYwtVGzFwDZC1HSDSrSX
      cihMyalQskuU6psU7RK2V8PxHBzfQVM1omaMqBWlw4rRYXYQ1sOEjDAhI0Ro63nY2Jqnhwgb
      YQzN3Cr0V5MAttJUVoLvNHH1lMD38T0P17YpFwqU8nmqGxvUN3I4GznsjRxuIY9ar6LWa4SE
      SxiPiOpjqT66JtBV0NUARQnwlQBbE3ga+BrYhkLdUHEMFaGB0BQUDXRFYBBgKAIDgUmArghU
      VUXXdAy18dBUHU0zQDdQdBMME0UPoRhW40cfeui6qQW6RaCZBJpBoBkIzcRVNSoCSoFLya1T
      8rYeW3vtqlOl6lSoe3UMzcDSQ4T0EB1mlFgoTjzUScyKEw/FiVlxYqE4IT2EoZmYuommaLel
      wF4tpkKAQHC11Db+VrvMEwKBwA8Enhfg+gGu5+M4No7r4LrufhNAcOmds5Q9nQfvvw+F1kkA
      IQKcwjp+KY/i1fDsMvXNHKJSQNSKOOU8bjmPqBWhXkTUSyheDUvxsRQPXQ1wVQVH1bA1Dfu6
      aR0DRzXRrA6MUAzTihIJR4mEY3REophWB6puYVoRTDOColugmyiaBZqBUHWEqhEoKj4KrmDr
      oeChNP6QQYDvB/hBQCAEnh/g+T6u71F3bWpOjZpTp+bWqW5Nr5/neC6262B7Drbr4gU+pmZh
      aiFMzSJsRIiacaJWjIgRJWxECOkRLD2EgkIQsF1n2J4GgkBww7x3LxcEV583mmz94Nr84Lrn
      /nvmbS0bCITwQfjvngY+Qng7zPNRFFBVA92wMA0T0zQxDRNDU9F1DdPQ95sAdS5fWiWKTXTy
      MJGtUeGudoi7mvFBEADXBsy6Oorc9cusXXqB4gv/HdhbGG874zxXeXSrVMP2TkY0/rlxn3P1
      faURSGPBqyfBWxPBuw+vAgVfUfCvn6IilKtrKNeto1w35YbD99aUG89p1euWUxuhXH0PFRSB
      QoCiCBQEihKgEqAqYmsaoCJQlcYyqgLa1lRVQFVBVRRUVUHbmqcooGvK1jLK1nqNZRpXUUXj
      XFtVt/4fjW9C07St9RsjKmiqsvV3BESAAmiairr9dwi2Xivby6hK406iqnrt29N1fTtORICu
      aWjatVhURUHX1cb5uqqDomMYIVTN2HqYaJqFohqgaOi6haqZqJqBEI14r5W/Rhm8fke9zwTw
      OffWeRCCoydPoLP/I4Dvu3i1zT2vF6Dgivf2PNztP7OdEu85Gis7TXak7LKQ8p4X20tefXnd
      eez1z68lC8q17WxXShsvdo/jPcvc/nPkg27fdYBauUjdV+nqbPxqv1VOgSTperISLLU1+QsW
      qa3JBJDamkwAqa3JBJDa2m0bGe5qm78ktZLb1gp09SLXXluCrn78Xtuur15Q24v9tlTt57P2
      u96NFw/v5Gd9kPX28102M8YbL8ru5rYmANzdF2GEEHd1fNAa3yPc/d/lrX6Pty0BJKkVtfzo
      0OsrM2zYYQ6ldE6fz/Lxjxzbcbnl5SXS6UEAyoV15hZXiHb1Ud1YxjeipJMRlrNrdPWk2Vhd
      wuzo4sjE6Pt2jdiPy1OXmTw8+b7LLM5Os75RYngszcL8Mj39I7ilVTbLDoODPSwtr5IenaS3
      q2PfcawuzbGWL9E/Mk4yHnnXe7XNNfxwiugu95xeXlomPZje8b3CeoalzBqJVD8bK0sY0U6S
      HTqZ1Ry9g8NkFheIdqWYGB28pTinLp7DdgVdfUOkU103X8GtslRwGEztfA+xxdkp1vMVhof7
      WVjMtH4CeIFCrbLJoqcSi6gsTJ/nnSur3HO4n1JNxaSOEopT31wlszjP4ZMfJ9aZpKdcwlZr
      6FYvHVSI9PTTWS5RLxdJ9o9TK2Sv7yt321QqFS5dukAqZrBR9Mg5PnHLYHMtQ10J8cmPf5SB
      oWGKpYvk1/Lcc+J+FqenGRsdoXJphlyhzMmTx5mamqe3a3zfcQRBgCcUTFHnNy++SrgzheVX
      cIWCSZVqqEwXmyxm10kPjlCvFSnZ0BmPIWqbrCwvkejuYmFhjvTgBLncCsdPfoTOZC/lcpmg
      vEo0PYm7uURP3wilYolaIUvf+HGK2Su3HKcrNI4dP8rFixd4/crb5Ooqhwe7qHsmOhVWN20S
      HQbl/CZWVyfxcIKV9TWyyxGiusNiZoP04DB1P+D40XtID41QLF8il81z9OT9B6MZtDOsUbBB
      VyBfqtIhfOqayZEjE/hCYbA/RbSzm8MjvTg+rC/PUSHMQKoPu16gZNtkZi6jdaRI9yYoFjeo
      Oe5tL/z1WgUUHc91KRQ2CQIYP3IfBg4uOqODA4Dg4vnzpMfGiUU0cuvreELjwvkLjI6PY+Kz
      vr4O+gcbv6cj3sX4cC8Xz7+D3tHFQG+ScLST7niERFcPff19lKs1xsbHMVSdI5PjJPsGiYZ1
      OmIJehIR1jfyDI6ME4+YDI0dJhY2WJ6bhlBjYK1yfg3bdpm5fJFoapCe7i6KG2s4jnfLcYog
      oFIs4KNRd2B8ZAjHDRga7GezVGVoaAgrEuNQupeRI5PgeCR7BzA1KJXrjI0fwlA1jtxzBF2j
      8d2OHqIzqpNby7V+HcCx6yiqiuM2ugo79Qp1VyGeiGKZFr5dZbVQJZmIoasgtBB2aYNsLk8i
      2YshbHwtguKUyG2W6elL49c2MTq6iEX2fjfC95NdXiSW7COolyjVXBLxOHoojO/Usasl6oFO
      b0+CzOICVdtnaHSEXHaFVP8AmYU5PKExPDJEZiXDQDqNpu4/Re1ameXsBsMjw+RXl9EjnSxO
      XaRvdIJUV5TlzBo9XXGy6wV6U0kMQ8fe+o5r5U0cTHq7YywsLNHb3xjf3zINNjdWWc+XSPYO
      IOwSWrgTt7JBoVSjLz1MbXONjq4+ItatnXyUCjk2SjbDQwNUi3mK9YDeriiZtQJ9PZ1k1/P0
      JLvRCMC08OsuuY1VYl29hDSfzNpW/JaFpsDK9nc7TC6baf0EkG6Xxo9O2m2AY5kAUltrr3SX
      pBvIBJDuCm69Qq5QIvAcsqvruy/oO5Qq9ffMrldLrOeLeE6N2ZlZKnXnlj5X+9a3vvWtfcYs
      SbfN4rlT/PB3MwyG6/zND57j+OE0F64sEtY8Ll+ZxXZ8/vHvv01vTOfHL54lFg2TTMRZmp+m
      bAd8/7t/Syw1gl6Z48xslQtnXyPd181bZ8+jaVX+7v/9lInDI7x97m06U32YWmPfL48A0l1B
      QSEe1pnOVhju7eDFU68Q99f4xfO/xo10cfr0m/T0DjDc102su5dzZ15DCJdXXn+HP/z2FKmB
      UR649xAAiWQvnZbCciZDbvkyF5ZLDPQPcfbUC6xtrvHmuWvXIVr+Qph0MBihDk5MdLCYq5BM
      JOiOR7i8XObQ6ADxjgjxWBTND1jIlenp6gS9CIpBZxjoGEDYZQB0M8zi9Nt0d/dgF/KEO7vp
      sOIU/Bm6R9PUCh6HRq7dOlW2AkltTZ4CSW3t/wPOHoz+B1WLggAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
